{"version":3,"sources":["components/modal/modal-overlay.module.css","pages/orders-feed.module.css","pages/profile.module.css","components/ingredient-details/ingredient-details.module.css","components/app-header/app-header.tsx","services/hooks.ts","services/utils.ts","services/API.ts","services/constants/ingredients.ts","services/actions/ingredients.ts","services/constants/user.ts","components/custom/input/password-input.tsx","components/custom/input/email-input.tsx","pages/login.tsx","services/actions/user.ts","components/custom/input/name-input.tsx","pages/register.tsx","pages/forgot-password.tsx","pages/reset-password.tsx","services/constants/socket.ts","components/profile/user-settings.tsx","components/orders-feed/order-cut-mode.tsx","components/profile/user-orders-feed.tsx","pages/profile.tsx","components/utils/ItemTypes.jsx","components/burger-ingredients/burger-ingredients.tsx","components/modal/modal-overlay.tsx","components/modal/modal.tsx","images/done.png","components/order-details/OrderDetails.tsx","components/burger-constructor/burger-constructor.tsx","pages/burger-menu.tsx","pages/orders-feed.tsx","pages/not-found-404.tsx","components/app/protected-route.tsx","components/ingredient-details/ingredient-details.tsx","components/orders-feed/order-full-mode.tsx","components/app/app.tsx","services/store.ts","services/reducers/profile.ts","services/reducers/orders.ts","services/reducers/index.ts","services/reducers/ingredients.ts","index.tsx","services/middleware/socket.ts","components/app-header/app-header.module.css","components/burger-ingredients/burger-ingredients.module.css","components/order-details/order-details.module.css","components/burger-constructor/burger-constructor.module.css","components/modal/modal.module.css","components/orders-feed/orders-feed.module.css","pages/login.module.css","components/app/app.module.css"],"names":["module","exports","AppHeader","pathname","useLocation","className","AppHeaderStyle","header","wrapper","to","link","activeClassName","linkActive","type","linkText","logo","includes","useSelector","selectorHook","useDispatch","dispatchHook","getCookie","name","matches","document","cookie","match","RegExp","replace","decodeURIComponent","undefined","setCookie","value","options","exp","path","expires","sec","date","Date","setTime","getTime","toUTCString","getExpiredDate","updatedCookie","encodeURIComponent","optionKey","optionValue","getDate","currentDate","slice","toISOString","URL","WS_URL","checkResponse","res","console","log","ok","json","then","err","Promise","reject","status","fetchIngredients","a","fetch","data","fetchOrderIngredients","orderItems","body","ingredients","accessToken","method","headers","authorization","JSON","stringify","resetPasswordRequest","email","saveNewPasswordRequest","form","createUser","loginUser","mode","cache","credentials","redirect","referrerPolicy","logoutUser","token","localStorage","getItem","getUserInfo","Authorization","refreshToken","updateUser","GET_BURGER_INGREDIENTS_REQUEST","GET_BURGER_INGREDIENTS_SUCCESS","GET_BURGER_INGREDIENTS_ERROR","SEND_ORDER_ITEMS_REQUEST","SEND_ORDER_ITEMS_SUCCESS","SEND_ORDER_ITEMS_ERROR","ADD_BURGER_INGREDIENT","DELETE_BURGER_INGREDIENT","ADD_BUN","CHANGE_INGREDIENTS_POSITION","ADD_ITEM_TO_COUNTER","DELETE_ITEM_FROM_COUNTER","sendOrderItems","items","dispatch","success","order","number","catch","SAVE_PASSWORD_REQUEST","SAVE_PASSWORD_SUCCESS","SAVE_PASSWORD_ERROR","CREATE_USER_REQUEST","CREATE_USER_SUCCESS","CREATE_USER_ERROR","LOGIN_USER_REQUEST","LOGIN_USER_SUCCESS","LOGIN_USER_ERROR","GET_USER_SUCCESS","GET_USER_REQUEST","GET_USER_ERROR","UPDATE_USER_SUCCESS","UPDATE_USER_ERROR","REFRESH_TOKEN_REQUEST","REFRESH_TOKEN_SUCCESS","REFRESH_TOKEN_ERROR","LOGOUT_SUCCESS","PasswordInput","onChange","placeholder","size","useState","fieldDisabled","setDisabled","visible","setVisible","error","setError","inputRef","useRef","icon","ref","onBlur","e","target","length","validateField","onFocus","onIconClick","setTimeout","current","focus","errorText","disabled","EmailInput","test","LoginPage","password","setValue","history","useHistory","location","hasError","store","profile","loginUserFailed","errorMessage","isAuthenticated","register","useCallback","forgotPassword","login","preventDefault","split","setItem","user","message","loginUserThunk","state","from","style","title","action","onSubmit","text__wrapper","onClick","NameInput","RegisterPage","createUserFailed","createUserThunk","ForgotPasswordPage","setHasError","resetPassword","push","ResetPasswordPage","savePasswordFailed","saveNewPassword","savePasswordThunk","WS_CONNECTION_START","WS_CONNECTION_SUCCESS","WS_CONNECTION_ERROR","WS_CONNECTION_CLOSED","WS_CONNECTION_GET_MESSAGE","UserSettings","prevState","setPrevState","setForm","updateUserSuccess","useEffect","updateUserInfo","updateUserRequest","cancelUserChanges","window","buttons","OrderCutMode","props","createdAt","propsIngredients","orderTotalSum","useMemo","totalSum","forEach","item","i","_id","price","orderIngredientsImages","images","src","splice","wrapper__listMode","backgroundFeed","prevPath","backgroundProfile","order__number","order__date","order__name","order__statusDone","order__status","order__list","order__listItem","order__listItemCM","map","index","alt","burgerItem__icon","burgerItem__iconCM","order__price","order__priceNumber","UserOrdersFeed","orders","ordersFeed","updatedAt","ProfilePage","getUserError","payload","signOut","logout","nav","list","exact","listItem","activeNavLink","undertitle","ItemTypes","Ingredient","count","menuCounter","counterIngredients","element","filter","elem","useDrag","collect","monitor","isDragging","drag","BurgerIngredientsStyle","card","backgroundIngredients","handleClick","image","text","BurgerIngredients","React","setCurrent","buns","sauces","main","tabsRef","containerRef","bunsTitleRef","saucesTitleRef","mainTitleRef","startPosition","getBoundingClientRect","y","container","handleScroll","start","saucesPosition","mainPosition","addEventListener","removeEventListener","display","active","scrollIntoView","behavior","scrollArea","subTitle","ModalOverlay","closeModal","ModalOverlayStyle","modal__overlay","modalRoot","getElementById","Modal","children","closeModalWithKey","keyCode","ReactDOM","createPortal","id","ModalStyle","modal__wrapper","modal","modal__header","modal__card","OrderDetails","orderNumber","orderNumberRequest","sendOrderRequest","orderNumberSuccess","sendOrderSuccess","OrderDetailsStyle","SuccessfulOrder","DraggableIngredient","deleteItem","moveCard","useDrop","accept","handlerId","getHandlerId","hover","dragIndex","hoverIndex","hoverBoundingRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","drop","opacity","BurgerConstructorStyle","isLocked","thumbnail","BurgerConstructor","totalPrice","currentIngredients","isBunAdded","bun","showModal","setShowModal","dragCard","newCards","addItem","copiedCounterArray","findIndex","anotherBunIndex","counter","increaseCounter","elemIndex","newCount","decreaseCounter","hasOwnProperty","isOver","border","priceCard","ingredientsIds","Object","keys","elements","concat","alert","showModalWindow","BurgerConstructorPage","AppStyle","DndProvider","backend","HTML5Backend","OrdersFeedPage","total","totalToday","ordersDone","ordersInProgress","feed__wrapper","feed__list","feed__listItem","tracker","tracker__ordersWrapper","tracker__orders","tracker__orderTitle","tracker__orderList","tracker__orderListItem","tracker__orderListItemDone","tracker__info","tracker__infoTitle","tracker__infoText","NotFound404","ProtectedRoute","rest","render","IngredientDetails","useParams","isLoading","currentIngredient","find","IngredientDetailsStyle","nutrients","nutrient__column","calories","proteins","fat","carbohydrates","OrderFullMode","ingredientsOfCurrentOrder","arr","orderIngredients","orderTotalPrice","wrapper__fullMode","order__numberFM","order__nameFM","order__listFM","order__listItemFM","image_mobile","burgerItem__name","burgerItem__priceCard","burgerItem__price","order__dateFM","order__priceFM","App","uploadUserInfo","closeModalWindow","initialState","ingredient","ingredientsRequest","ingredientsSuccess","ingredientsFailed","sendOrderFailed","savePasswordRequest","savePasswordSuccess","createUserRequest","createUserSuccess","loginUserRequest","loginUserSuccess","getUserRequest","getUserSuccess","refreshTokenRequest","refreshTokenSuccess","refreshTokenFailed","logoutSuccess","wsConnected","rootReducer","combineReducers","wsActions","WSStart","WSSend","WSonOpen","WSonClose","WSonError","WSonMessage","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","socket","next","getState","WebSocket","onopen","event","onerror","onclose","onmessage","parse","socketMiddleware","createStore","StrictMode"],"mappings":"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","file":"static/js/main.c812f130.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal__overlay\":\"modal-overlay_modal__overlay__2neVv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"orders-feed_wrapper__3EYzT\",\"feed__list\":\"orders-feed_feed__list__2pydk\",\"feed__wrapper\":\"orders-feed_feed__wrapper__1ajEx\",\"feed__listItem\":\"orders-feed_feed__listItem__RAU6g\",\"tracker\":\"orders-feed_tracker__2gKBA\",\"tracker__ordersWrapper\":\"orders-feed_tracker__ordersWrapper__2NE9U\",\"tracker__orders\":\"orders-feed_tracker__orders__1efTL\",\"tracker__orderList\":\"orders-feed_tracker__orderList__3YhVF\",\"tracker__orderListItem\":\"orders-feed_tracker__orderListItem__1-Lra\",\"tracker__orderListItemDone\":\"orders-feed_tracker__orderListItemDone__28ZQg\",\"tracker__info\":\"orders-feed_tracker__info__2vNqD\",\"tracker__infoText\":\"orders-feed_tracker__infoText__2Vm_5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"profile_wrapper__lza97\",\"profile\":\"profile_profile__8owKd\",\"nav\":\"profile_nav__6fOaY\",\"list\":\"profile_list__39LKw\",\"listItem\":\"profile_listItem__1va1Z\",\"window\":\"profile_window__3rZ2V\",\"undertitle\":\"profile_undertitle__GOUp4\",\"buttons\":\"profile_buttons__2HUu3\",\"error\":\"profile_error__3XRFT\",\"activeNavLink\":\"profile_activeNavLink__RvWly\",\"ordersFeed\":\"profile_ordersFeed__NVUTH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ingredient-details_container__23YOC\",\"image\":\"ingredient-details_image__1-ZcW\",\"title\":\"ingredient-details_title__-0R-q\",\"nutrients\":\"ingredient-details_nutrients__3qmBT\",\"nutrient__column\":\"ingredient-details_nutrient__column__1zg0m\"};","import { Logo, BurgerIcon, ListIcon, ProfileIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport AppHeaderStyle from './app-header.module.css';\r\nimport { Link, NavLink, useLocation } from 'react-router-dom';\r\n\r\n\r\nconst AppHeader = () => {\r\n    const { pathname } = useLocation<string>();\r\n\r\n    return (\r\n        <header className={`${AppHeaderStyle.header}`}>\r\n            <div className={`${AppHeaderStyle.wrapper}`}>\r\n                <NavLink to=\"/\" className={`${AppHeaderStyle.link} p-4  p-4 `} activeClassName={AppHeaderStyle.linkActive}>\r\n                    <BurgerIcon type={`${pathname === '/' ? 'primary' : 'secondary'}`} />\r\n                    <span className={`${pathname === '/' ? 'text_color_active' : 'text_color_inactive'} text text_type_main-default  ${AppHeaderStyle.linkText}`}>Конструктор</span>\r\n                </NavLink>\r\n                <NavLink to='/feed' className={`${AppHeaderStyle.link}`} activeClassName={AppHeaderStyle.linkActive}>\r\n                    <ListIcon type={`${pathname === '/feed' ? 'primary' : 'secondary'}`} />\r\n                    <span className={`${pathname === '/feed' ? 'text_color_active' : 'text_color_inactive'} text text_type_main-default  ${AppHeaderStyle.linkText}`}>Лента заказов</span>\r\n                </NavLink>\r\n                <Link to=\"/\" className={`${AppHeaderStyle.logo} p-4  p-4`}>\r\n                    <Logo />\r\n                </Link>\r\n                <NavLink to='/profile' className={`${AppHeaderStyle.link}`} activeClassName={AppHeaderStyle.linkActive}>\r\n                    <ProfileIcon type={`${pathname.includes('/profile') ? 'primary' : 'secondary'}`} />\r\n                    <span className={`${pathname.includes('/profile') ? 'text_color_active' : 'text_color_inactive'} text text_type_main-default ${AppHeaderStyle.linkText}`}>Личный кабинет</span>\r\n                </NavLink>\r\n            </div>\r\n\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default AppHeader;","import {\r\n    TypedUseSelectorHook,\r\n    useDispatch as dispatchHook,\r\n    useSelector as selectorHook\r\n} from 'react-redux';\r\nimport { AppDispatch, AppThunk, RootState } from './types/index';\r\n\r\nexport const useSelector: TypedUseSelectorHook<RootState> = selectorHook;\r\n\r\nexport const useDispatch = () => dispatchHook<AppDispatch | AppThunk>(); ","interface ICookieOptions {\r\n    expires?: number;\r\n    [key: string]: any\r\n}\r\n\r\nexport function getCookie(name: string) {\r\n    const matches = document.cookie.match(\r\n        new RegExp('(?:^|; )' + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + '=([^;]*)')\r\n    );\r\n    return matches ? decodeURIComponent(matches[1]) : undefined;\r\n}\r\n\r\nfunction getExpiredDate(sec: number) {\r\n    const date = new Date()\r\n    date.setTime(date.getTime() + sec * 1000)\r\n    return +date.toUTCString()\r\n}\r\n\r\nexport function setCookie(name: string, value: string, options?: ICookieOptions) {\r\n    options = {\r\n        path: '/',\r\n        ...options\r\n    }\r\n\r\n    let exp = options.expires;\r\n\r\n    if (typeof exp == 'number' && exp) {\r\n        exp = options.expires = getExpiredDate(exp)\r\n    }\r\n\r\n    let updatedCookie = encodeURIComponent(name) + '=' + encodeURIComponent(value)\r\n    for (let optionKey in options) {\r\n        updatedCookie += '; ' + optionKey\r\n        let optionValue = options[optionKey]\r\n        if (optionValue !== true) {\r\n            updatedCookie += '=' + optionValue\r\n        }\r\n    }\r\n    document.cookie = updatedCookie\r\n}\r\n\r\n\r\nexport function deleteCookie(name: string) {\r\n    setCookie(name, '', { expires: -1 });\r\n}\r\n\r\n// Transform string into date\r\nexport const getDate = (date: string) => {\r\n    const currentDate = new Date();\r\n\r\n    if (date.slice(0, 10) === currentDate.toISOString().slice(0, 10)) {\r\n        return `Сегодня, ${date.slice(11, 16)} i-GMT+3`\r\n    } else {\r\n        return `${date.slice(0, 10)}, ${date.slice(11, 16)} i-GMT+3`\r\n    };\r\n};","import { getCookie } from './utils';\r\nimport {\r\n    TIngredients,\r\n    TFetchResponse,\r\n    TFetchOrderIngredients,\r\n    TFetchSignUser,\r\n    TRefreshToken,\r\n    TGetUserInfo,\r\n    TUpdateUserInfo,\r\n    CustomResponse\r\n} from '../components/utils/types';\r\n\r\n// Main API constant\r\nexport const URL = 'https://norma.nomoreparties.space/api';\r\n\r\n// Web Socket constant\r\nexport const WS_URL = 'wss://norma.nomoreparties.space/orders';\r\n\r\n\r\n\r\nexport const checkResponse = (res: CustomResponse<JSON>) => {\r\n    //previous solution\r\n    console.log('in checkResponse')\r\n    return res.ok ? res.json() : res.json().then((err) => {\r\n        console.log('checkResponse err ', err)\r\n        return Promise.reject(`Ошибка ${res.status}`)\r\n    });\r\n};\r\n\r\n\r\n\r\nexport const fetchIngredients = async () => {\r\n    const data = await fetch(URL + '/ingredients').then(checkResponse) as TIngredients;\r\n    console.log('data ', data)\r\n    return data\r\n\r\n}\r\n\r\nexport const fetchOrderIngredients = async (orderItems: string[]) => {\r\n    const body = { ingredients: orderItems };\r\n    const accessToken = getCookie('accessToken');\r\n    const data = await fetch(URL + '/orders', {\r\n        method: \"POST\",\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            authorization: `Bearer ${accessToken}`\r\n        },\r\n        body: JSON.stringify(body)\r\n    }).then(checkResponse) as TFetchOrderIngredients;\r\n\r\n    console.log('fetch order items ', data)\r\n    return data\r\n\r\n}\r\n\r\nexport const resetPasswordRequest = async (email: { email: string }) => {\r\n    const data = await fetch(URL + '/password-reset', {\r\n        method: \"POST\",\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(email)\r\n    }).then(checkResponse) as TFetchResponse;\r\n\r\n    console.log('resetpassword ', data)\r\n    return data\r\n}\r\n\r\n\r\nexport const saveNewPasswordRequest = async (form: { password: string, token: string }) => {\r\n    const data = await fetch(URL + '/password-reset/reset', {\r\n        method: \"POST\",\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(form)\r\n    }).then(checkResponse) as TFetchResponse;\r\n\r\n    console.log('saveNewPassword ', data)\r\n    return data\r\n}\r\n\r\nexport const createUser = async (form: { email: string, password: string, name: string }) => {\r\n    const data = await fetch(URL + '/auth/register', {\r\n        method: \"POST\",\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(form)\r\n    }).then(checkResponse) as TFetchSignUser;\r\n\r\n    console.log('create User ', data)\r\n    return data\r\n}\r\n\r\nexport const loginUser = async (form: { email: string, password: string }) => {\r\n    console.log('loginUser ')\r\n    const data = await fetch(URL + '/auth/login', {\r\n        method: \"POST\",\r\n        mode: 'cors',\r\n        cache: 'no-cache',\r\n        credentials: 'same-origin',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        redirect: 'follow',\r\n        referrerPolicy: 'no-referrer',\r\n        body: JSON.stringify(form)\r\n    }).then(checkResponse) as TFetchSignUser;\r\n\r\n    console.log('login ', data)\r\n    return data\r\n}\r\n\r\nexport const logoutUser = async () => {\r\n    const token = localStorage.getItem('refreshToken');\r\n    const body = {\r\n        token: token\r\n    }\r\n    const data = await fetch(URL + '/auth/logout', {\r\n        method: \"POST\",\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(body)\r\n    }).then(checkResponse) as TFetchResponse;\r\n\r\n    console.log('logout user ', data)\r\n    return data\r\n}\r\n\r\n\r\nexport const getUserInfo = async () => {\r\n    console.log('i work ', true)\r\n    const data = await fetch(URL + '/auth/user', {\r\n        method: \"GET\",\r\n        mode: 'cors',\r\n        cache: 'no-cache',\r\n        credentials: 'same-origin',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer ' + getCookie('accessToken')\r\n        },\r\n        redirect: 'follow',\r\n        referrerPolicy: 'no-referrer'\r\n    }).then(checkResponse) as TGetUserInfo;\r\n\r\n    console.log('get user info ', data)\r\n    return data;\r\n}\r\n\r\nexport const refreshToken = async (token: string | null) => {\r\n    const body = {\r\n        token: token\r\n    }\r\n\r\n    const data = await fetch(URL + '/auth/token', {\r\n        method: \"POST\",\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(body)\r\n    }).then(checkResponse) as TRefreshToken;\r\n\r\n    console.log('refreshToken ', data)\r\n    return data\r\n}\r\n\r\n\r\nexport const updateUser = async (form: TUpdateUserInfo) => {\r\n\r\n    const data = await fetch(URL + '/auth/user', {\r\n        method: \"PATCH\",\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer ' + getCookie('accessToken')\r\n        },\r\n        body: JSON.stringify(form)\r\n    }).then(checkResponse) as TGetUserInfo;\r\n\r\n    console.log('update user data ', data)\r\n    return data\r\n}\r\n\r\n\r\n","export const GET_BURGER_INGREDIENTS_REQUEST: \"GET_BURGER_INGREDIENTS_REQUEST\" = \"GET_BURGER_INGREDIENTS_REQUEST\";\r\nexport const GET_BURGER_INGREDIENTS_SUCCESS: \"GET_BURGER_INGREDIENTS_SUCCESS\" = \"GET_BURGER_INGREDIENTS_SUCCESS\";\r\nexport const GET_BURGER_INGREDIENTS_ERROR: \"GET_BURGER_INGREDIENTS_ERROR\" = \"GET_BURGER_INGREDIENTS_ERROR\";\r\n\r\nexport const SEND_ORDER_ITEMS_REQUEST: \"SEND_ORDER_ITEMS_REQUEST\" = \"SEND_ORDER_ITEMS_REQUEST\";\r\nexport const SEND_ORDER_ITEMS_SUCCESS: \"SEND_ORDER_ITEMS_SUCCESS\" = \"SEND_ORDER_ITEMS_SUCCESS\";\r\nexport const SEND_ORDER_ITEMS_ERROR: \"SEND_ORDER_ITEMS_ERROR\" = \"SEND_ORDER_ITEMS_ERROR\";\r\n\r\nexport const ADD_BURGER_INGREDIENT: \"ADD_BURGER_INGREDIENT\" = \"ADD_BURGER_INGREDIENT\";\r\nexport const DELETE_BURGER_INGREDIENT: \"DELETE_BURGER_INGREDIENT\" = \"DELETE_BURGER_INGREDIENT\";\r\nexport const ADD_BUN: \"ADD_BUN\" = \"ADD_BUN\";\r\nexport const CHANGE_INGREDIENTS_POSITION: \"CHANGE_INGREDIENTS_POSITION\" = \"CHANGE_INGREDIENTS_POSITION\";\r\n\r\nexport const ADD_ITEM_TO_COUNTER: \"ADD_ITEM_TO_COUNTER\" = \"ADD_ITEM_TO_COUNTER\";\r\nexport const DELETE_ITEM_FROM_COUNTER: \"DELETE_ITEM_FROM_COUNTER\" = \"DELETE_ITEM_FROM_COUNTER\";","import {\r\n    fetchIngredients,\r\n    fetchOrderIngredients\r\n} from '../API';\r\n\r\nimport {\r\n    GET_BURGER_INGREDIENTS_REQUEST,\r\n    GET_BURGER_INGREDIENTS_SUCCESS,\r\n    GET_BURGER_INGREDIENTS_ERROR,\r\n    SEND_ORDER_ITEMS_REQUEST,\r\n    SEND_ORDER_ITEMS_SUCCESS,\r\n    SEND_ORDER_ITEMS_ERROR,\r\n    ADD_BURGER_INGREDIENT,\r\n    DELETE_BURGER_INGREDIENT,\r\n    ADD_BUN,\r\n    CHANGE_INGREDIENTS_POSITION,\r\n    ADD_ITEM_TO_COUNTER,\r\n    DELETE_ITEM_FROM_COUNTER\r\n} from '../constants/ingredients';\r\n\r\nimport { TItem, TOrder } from '../../components/utils/types';\r\nimport { AppThunk, AppDispatch } from '../types/index';\r\n\r\n// Types for Actions\r\ninterface IGetBurgerIngredientsRequestAction {\r\n    readonly type: typeof GET_BURGER_INGREDIENTS_REQUEST\r\n}\r\n\r\ninterface IGetBurgerIngredientsSuccessAction {\r\n    readonly type: typeof GET_BURGER_INGREDIENTS_SUCCESS,\r\n    readonly ingredients: TItem[]\r\n}\r\n\r\ninterface IGetBurgerIngredientsErrorAction {\r\n    readonly type: typeof GET_BURGER_INGREDIENTS_ERROR\r\n}\r\n\r\ninterface IAddItemToCounterAction {\r\n    readonly type: typeof ADD_ITEM_TO_COUNTER,\r\n    copiedCounterArray: TItem[]\r\n}\r\n\r\ninterface IDeleteItemFromCounterAction {\r\n    readonly type: typeof DELETE_ITEM_FROM_COUNTER,\r\n    copiedCounterArray: TItem[]\r\n}\r\n\r\ninterface ISendOrderItemsRequestAction {\r\n    readonly type: typeof SEND_ORDER_ITEMS_REQUEST\r\n}\r\n\r\ninterface ISendOrderItemsSuccessAction {\r\n    readonly type: typeof SEND_ORDER_ITEMS_SUCCESS,\r\n    readonly order: number\r\n}\r\n\r\ninterface ISendOrderItemsErrorAction {\r\n    readonly type: typeof SEND_ORDER_ITEMS_ERROR\r\n}\r\n\r\ninterface IAddBurgerIngredientAction {\r\n    readonly type: typeof ADD_BURGER_INGREDIENT,\r\n    readonly item: TItem,\r\n    readonly price: number\r\n}\r\n\r\ninterface IDeleteBurgerIngredientAction {\r\n    readonly type: typeof DELETE_BURGER_INGREDIENT,\r\n    readonly elemIndex: number,\r\n    readonly price: number\r\n}\r\n\r\ninterface IAddBunAction {\r\n    readonly type: typeof ADD_BUN,\r\n    readonly item: TItem,\r\n    readonly price: number\r\n}\r\n\r\ninterface IChangeIngredientsPositionAction {\r\n    readonly type: typeof CHANGE_INGREDIENTS_POSITION,\r\n    readonly newCards: TItem[]\r\n}\r\n\r\n\r\n// creating Union TIngredientsActions\r\nexport type TIngredientsActions =\r\n    | IGetBurgerIngredientsRequestAction\r\n    | IGetBurgerIngredientsSuccessAction\r\n    | IGetBurgerIngredientsErrorAction\r\n    | IAddItemToCounterAction\r\n    | IDeleteItemFromCounterAction\r\n    | ISendOrderItemsRequestAction\r\n    | ISendOrderItemsSuccessAction\r\n    | ISendOrderItemsErrorAction\r\n    | IAddBurgerIngredientAction\r\n    | IDeleteBurgerIngredientAction\r\n    | IAddBunAction\r\n    | IChangeIngredientsPositionAction\r\n\r\n\r\nexport const getIngredients: AppThunk = () => {\r\n    return function (dispatch: AppDispatch) {\r\n        dispatch({\r\n            type: GET_BURGER_INGREDIENTS_REQUEST\r\n        });\r\n        fetchIngredients()\r\n            .then(res => {\r\n                if (res && res.success) {\r\n                    dispatch({\r\n                        type: GET_BURGER_INGREDIENTS_SUCCESS,\r\n                        ingredients: res.data\r\n                    });\r\n                } else {\r\n                    dispatch({\r\n                        type: GET_BURGER_INGREDIENTS_ERROR\r\n                    });\r\n                }\r\n            }).catch((err) => {\r\n                console.log(err)\r\n                dispatch({\r\n                    type: GET_BURGER_INGREDIENTS_ERROR\r\n                });\r\n            })\r\n    };\r\n}\r\n\r\nexport const sendOrderItems: AppThunk = (items: string[]) => {\r\n    return function (dispatch: AppDispatch) {\r\n        dispatch({\r\n            type: SEND_ORDER_ITEMS_REQUEST\r\n        });\r\n        fetchOrderIngredients(items)\r\n            .then(res => {\r\n                if (res && res.success) {\r\n                    console.log('res order', res.order);\r\n                    console.log('res order number', res.order!.number, typeof res.order!.number)\r\n                    dispatch({\r\n                        type: SEND_ORDER_ITEMS_SUCCESS,\r\n                        order: res.order!.number\r\n                    });\r\n                } else {\r\n                    dispatch({\r\n                        type: SEND_ORDER_ITEMS_ERROR\r\n                    });\r\n                }\r\n            }).catch((err) => {\r\n                console.log(err)\r\n                dispatch({\r\n                    type: GET_BURGER_INGREDIENTS_ERROR\r\n                });\r\n            })\r\n    };\r\n}\r\n\r\n","export const SAVE_PASSWORD_REQUEST: 'SAVE_PASSWORD_REQUEST' = \"SAVE_PASSWORD_REQUEST\";\r\nexport const SAVE_PASSWORD_SUCCESS: 'SAVE_PASSWORD_SUCCESS' = \"SAVE_PASSWORD_SUCCESS\";\r\nexport const SAVE_PASSWORD_ERROR: 'SAVE_PASSWORD_ERROR' = \"SAVE_PASSWORD_ERROR\";\r\n\r\nexport const CREATE_USER_REQUEST: 'CREATE_USER_REQUEST' = \"CREATE_USER_REQUEST\";\r\nexport const CREATE_USER_SUCCESS: 'CREATE_USER_SUCCESS' = \"CREATE_USER_SUCCESS\";\r\nexport const CREATE_USER_ERROR: 'CREATE_USER_ERROR' = \"CREATE_USER_ERROR\";\r\n\r\nexport const LOGIN_USER_REQUEST: 'LOGIN_USER_REQUEST' = \"LOGIN_USER_REQUEST\";\r\nexport const LOGIN_USER_SUCCESS: 'LOGIN_USER_SUCCESS' = \"LOGIN_USER_SUCCESS\";\r\nexport const LOGIN_USER_ERROR: 'LOGIN_USER_ERROR' = \"LOGIN_USER_ERROR\";\r\n\r\nexport const GET_USER_SUCCESS: 'GET_USER_SUCCESS' = \"GET_USER_SUCCESS\";\r\nexport const GET_USER_REQUEST: 'GET_USER_REQUEST' = \"GET_USER_REQUEST\";\r\nexport const GET_USER_ERROR: 'GET_USER_ERROR' = \"GET_USER_ERROR\";\r\n\r\nexport const UPDATE_USER_SUCCESS: 'UPDATE_USER_SUCCESS' = 'UPDATE_USER_SUCCESS';\r\nexport const UPDATE_USER_ERROR: 'UPDATE_USER_ERROR' = 'UPDATE_USER_ERROR';\r\n\r\nexport const REFRESH_TOKEN_REQUEST: 'REFRESH_TOKEN_REQUEST' = \"REFRESH_TOKEN_REQUEST\";\r\nexport const REFRESH_TOKEN_SUCCESS: 'REFRESH_TOKEN_SUCCESS' = \"REFRESH_TOKEN_SUCCESS\";\r\nexport const REFRESH_TOKEN_ERROR: 'REFRESH_TOKEN_ERROR' = \"REFRESH_TOKEN_ERROR\";\r\n\r\nexport const LOGOUT_SUCCESS: 'LOGOUT_SUCCESS' = \"LOGOUT_SUCCESS\";","import React, { useRef, useState, FC, FocusEvent } from 'react';\r\nimport { Input } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { IInputProps } from '../../utils/types';\r\n\r\ninterface IPasswordInputProps extends IInputProps {\r\n    placeholder?: string\r\n}\r\n\r\nexport const PasswordInput: FC<IPasswordInputProps> = ({ value, onChange, name, placeholder, size = 'default' }) => {\r\n    const [fieldDisabled, setDisabled] = useState<boolean>(true);\r\n    const [visible, setVisible] = useState<boolean>(false);\r\n    const [error, setError] = useState<boolean>(false);\r\n    const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n    const onIconClick = () => {\r\n        setDisabled(false);\r\n        setVisible(true);\r\n        setTimeout(() => inputRef.current?.focus(), 0);\r\n    };\r\n\r\n    const validateField = (value: string) => {\r\n        setError(value.length < 6);\r\n    };\r\n\r\n    const onFocus = () => {\r\n        setError(false);\r\n    };\r\n\r\n    const onBlur = (e: FocusEvent<HTMLInputElement>) => {\r\n        if (e.target.value) {\r\n            validateField(e.target.value);\r\n        } else {\r\n            setError(false);\r\n        }\r\n        setDisabled(true);\r\n        setVisible(false);\r\n    };\r\n\r\n    return (\r\n        <Input\r\n            type={visible ? 'text' : 'password'}\r\n            placeholder={placeholder}\r\n            onChange={onChange}\r\n            icon={visible ? 'CloseIcon' : 'EditIcon'}\r\n            value={value}\r\n            ref={inputRef}\r\n            onBlur={onBlur}\r\n            onFocus={onFocus}\r\n            name={name}\r\n            error={error}\r\n            onIconClick={onIconClick}\r\n            errorText={'Некорректный пароль'}\r\n            size={size}\r\n            disabled={fieldDisabled}\r\n        />\r\n    );\r\n};","import React, { useRef, useState, FC, FocusEvent } from 'react';\r\nimport { Input } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { IInputProps } from '../../utils/types';\r\n\r\nconst validateEmail = (email: string) => {\r\n    const re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return re.test(email);\r\n};\r\n\r\nexport const EmailInput: FC<IInputProps> = ({ value, onChange, name, size = 'default' }) => {\r\n    const [fieldDisabled, setDisabled] = useState<boolean>(true);\r\n    const [error, setError] = useState<boolean>(false);\r\n    const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n    const onIconClick = () => {\r\n        setDisabled(false);\r\n        setTimeout(() => inputRef.current?.focus(), 0);\r\n    };\r\n\r\n    const validateField = (value: string) => {\r\n        setError(!validateEmail(value));\r\n    };\r\n\r\n    const onFocus = () => {\r\n        setError(false);\r\n    };\r\n\r\n    const onBlur = (e: FocusEvent<HTMLInputElement>) => {\r\n        if (e.target.value) {\r\n            validateField(e.target.value);\r\n        } else {\r\n            setError(false);\r\n        }\r\n        setDisabled(true);\r\n    };\r\n\r\n    return (\r\n        <Input\r\n            type='email'\r\n            placeholder='Email'\r\n            onChange={onChange}\r\n            icon={!fieldDisabled ? 'CloseIcon' : 'EditIcon'}\r\n            value={value}\r\n            ref={inputRef}\r\n            onBlur={onBlur}\r\n            onFocus={onFocus}\r\n            name={name}\r\n            error={error}\r\n            disabled={fieldDisabled}\r\n            onIconClick={onIconClick}\r\n            errorText={'Ой, произошла ошибка!'}\r\n            size={size}\r\n        />\r\n    );\r\n};","import React, { useCallback, useState, FC, ChangeEvent } from 'react';\r\nimport { useHistory, Redirect, useLocation } from 'react-router-dom';\r\nimport style from './login.module.css';\r\nimport { Button } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { useSelector, useDispatch } from '../services/hooks';\r\nimport { loginUserThunk } from '../services/actions/user';\r\nimport { PasswordInput } from '../components/custom/input/password-input';\r\nimport { EmailInput } from '../components/custom/input/email-input';\r\nimport { Location } from \"history\";\r\nimport { TInputFormValues } from '../components/utils/types';\r\n\r\ntype TLoginForm = Omit<TInputFormValues, \"name\">\r\n\r\nconst LoginPage: FC = () => {\r\n    const [form, setValue] = useState<TLoginForm>({ email: '', password: '' });\r\n    const history = useHistory();\r\n    const location = useLocation<{ from?: Location<{} | null | undefined> }>();\r\n    const dispatch = useDispatch();\r\n    const hasError = useSelector((store) => store.profile.loginUserFailed);\r\n    const error = useSelector((store) => store.profile.errorMessage);\r\n    const isAuthenticated = useSelector((store) => store.profile.isAuthenticated);\r\n\r\n\r\n    const onChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setValue({ ...form, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const register = useCallback(() => {\r\n        history.replace({ pathname: '/register' })\r\n    }, [history]);\r\n\r\n    const forgotPassword = useCallback(() => {\r\n        history.replace({ pathname: '/forgot-password' })\r\n    }, [history]);\r\n\r\n    const login = useCallback(\r\n        (e) => {\r\n            e.preventDefault();\r\n            dispatch(loginUserThunk(form));\r\n        }, [form, dispatch]\r\n    )\r\n\r\n\r\n\r\n    if (isAuthenticated) {\r\n        return <Redirect to={location.state?.from || '/'} />;\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={`${style.wrapper}`}>\r\n            <h1 className={`text text_type_main-medium mb-6 ${style.title}`}>Вход</h1>\r\n            {hasError && <span className={`mt-4 mb-4 text text_type_main-default ${style.error}`}>{error}</span>}\r\n            <form action=\"\" className={`${style.form}`} onSubmit={login}>\r\n                <div className=\"mb-6\">\r\n                    <EmailInput onChange={onChange} value={form.email} name={'email'} />\r\n                </div>\r\n                <div className=\"mb-6\">\r\n                    <PasswordInput onChange={onChange} value={form.password} name={'password'} placeholder='Пароль' />\r\n                </div>\r\n                <div className=\"mb-20\">\r\n                    <Button type=\"primary\" size=\"medium\" >Войти</Button>\r\n                </div>\r\n            </form>\r\n            <div className={` ${style.text__wrapper} mb-4`}>\r\n                <span className=\"text text_type_main-default\">Вы - новый пользователь?</span>\r\n                <div className=\"ml-2\">\r\n                    <Button type=\"secondary\" size=\"medium\" onClick={register}>\r\n                        Зарегистрироваться?\r\n                    </Button>\r\n                </div>\r\n\r\n            </div>\r\n            <div className={` ${style.text__wrapper}`}>\r\n                <span className=\"text text_type_main-default\">Забыли пароль?</span>\r\n                <div className=\"ml-2\">\r\n                    <Button type=\"secondary\" size=\"medium\" onClick={forgotPassword}>\r\n                        Восстановить пароль\r\n                    </Button>\r\n                </div>\r\n\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\n\r\nexport default LoginPage;","\r\nimport {\r\n    saveNewPasswordRequest,\r\n    createUser,\r\n    loginUser,\r\n    refreshToken,\r\n    getUserInfo\r\n} from '../API';\r\n\r\nimport { AppThunk, AppDispatch } from '../types/index';\r\n\r\nimport { setCookie } from '../utils';\r\n\r\nimport {\r\n    SAVE_PASSWORD_REQUEST,\r\n    SAVE_PASSWORD_SUCCESS,\r\n    SAVE_PASSWORD_ERROR,\r\n    CREATE_USER_REQUEST,\r\n    CREATE_USER_SUCCESS,\r\n    CREATE_USER_ERROR,\r\n    LOGIN_USER_REQUEST,\r\n    LOGIN_USER_SUCCESS,\r\n    LOGIN_USER_ERROR,\r\n    GET_USER_SUCCESS,\r\n    UPDATE_USER_SUCCESS,\r\n    UPDATE_USER_ERROR,\r\n    REFRESH_TOKEN_REQUEST,\r\n    REFRESH_TOKEN_SUCCESS,\r\n    REFRESH_TOKEN_ERROR,\r\n    LOGOUT_SUCCESS,\r\n    GET_USER_REQUEST,\r\n    GET_USER_ERROR\r\n} from '../constants/user';\r\n\r\nimport { TUser } from '../../components/utils/types';\r\n\r\n// Types for Actions\r\ninterface ISavePasswordRequestAction {\r\n    readonly type: typeof SAVE_PASSWORD_REQUEST\r\n}\r\n\r\ninterface ISavePasswordSuccessAction {\r\n    readonly type: typeof SAVE_PASSWORD_SUCCESS\r\n}\r\n\r\ninterface ISavePasswordErrorAction {\r\n    readonly type: typeof SAVE_PASSWORD_ERROR,\r\n    readonly errorMessage?: string\r\n}\r\n\r\ninterface ICreateUserRequestAction {\r\n    readonly type: typeof CREATE_USER_REQUEST\r\n}\r\n\r\ninterface ICreateUserSuccessAction {\r\n    readonly type: typeof CREATE_USER_SUCCESS,\r\n    readonly user: TUser\r\n}\r\n\r\ninterface ICreateUserErrorAction {\r\n    readonly type: typeof CREATE_USER_ERROR,\r\n    readonly errorMessage?: string\r\n}\r\n\r\ninterface ILoginUserAction {\r\n    readonly type: typeof LOGIN_USER_REQUEST\r\n}\r\n\r\ninterface ILoginUserSuccessAction {\r\n    readonly type: typeof LOGIN_USER_SUCCESS,\r\n    readonly user: TUser\r\n}\r\n\r\ninterface ILoginUserErrorAction {\r\n    readonly type: typeof LOGIN_USER_ERROR,\r\n    readonly errorMessage?: string\r\n}\r\n\r\ninterface IGetUserSuccessAction {\r\n    readonly type: typeof GET_USER_SUCCESS,\r\n    readonly user: TUser\r\n}\r\n\r\ninterface IGetUserRequestAction {\r\n    readonly type: typeof GET_USER_REQUEST\r\n}\r\n\r\ninterface IGetUserErrorAction {\r\n    readonly type: typeof GET_USER_ERROR,\r\n    readonly errorMessage?: string\r\n}\r\n\r\ninterface IUpdateUserSuccessAction {\r\n    readonly type: typeof UPDATE_USER_SUCCESS,\r\n    readonly user: TUser\r\n}\r\n\r\ninterface UpdateUserErrorAction {\r\n    readonly type: typeof UPDATE_USER_ERROR,\r\n    readonly errorMessage?: string\r\n}\r\n\r\ninterface IRefreshTokenRequestAction {\r\n    readonly type: typeof REFRESH_TOKEN_REQUEST\r\n}\r\n\r\ninterface IRefreshTokenSuccessAction {\r\n    readonly type: typeof REFRESH_TOKEN_SUCCESS,\r\n    readonly user: TUser\r\n}\r\n\r\ninterface IRefreshTokenErrorAction {\r\n    readonly type: typeof REFRESH_TOKEN_ERROR,\r\n    readonly errorMessage?: string\r\n}\r\n\r\ninterface ILogoutSuccessAction {\r\n    readonly type: typeof LOGOUT_SUCCESS\r\n}\r\n\r\n// creating Union TUserProfileActions\r\nexport type TUserProfileActions =\r\n    | ISavePasswordRequestAction\r\n    | ISavePasswordSuccessAction\r\n    | ISavePasswordErrorAction\r\n    | ICreateUserRequestAction\r\n    | ICreateUserSuccessAction\r\n    | ICreateUserErrorAction\r\n    | ILoginUserAction\r\n    | ILoginUserSuccessAction\r\n    | ILoginUserErrorAction\r\n    | IGetUserSuccessAction\r\n    | IGetUserRequestAction\r\n    | IGetUserErrorAction\r\n    | IUpdateUserSuccessAction\r\n    | UpdateUserErrorAction\r\n    | IRefreshTokenRequestAction\r\n    | IRefreshTokenSuccessAction\r\n    | IRefreshTokenErrorAction\r\n    | ILogoutSuccessAction\r\n\r\n\r\nexport const savePasswordThunk: AppThunk = (form: { password: string, token: string }) => {\r\n    return function (dispatch: AppDispatch) {\r\n        dispatch({\r\n            type: SAVE_PASSWORD_REQUEST\r\n        });\r\n        saveNewPasswordRequest(form)\r\n            .then(res => {\r\n\r\n                if (res && res.success) {\r\n                    dispatch({\r\n                        type: SAVE_PASSWORD_SUCCESS\r\n                    });\r\n                } else {\r\n                    dispatch({\r\n                        type: SAVE_PASSWORD_ERROR,\r\n                        errorMessage: res.message\r\n                    });\r\n                }\r\n            }).catch((err) => {\r\n                console.log(err)\r\n                dispatch({\r\n                    type: SAVE_PASSWORD_ERROR\r\n                });\r\n            })\r\n    };\r\n}\r\n\r\nexport const createUserThunk: AppThunk = (form: { email: string, password: string, name: string }) => {\r\n    return function (dispatch: AppDispatch) {\r\n        dispatch({\r\n            type: CREATE_USER_REQUEST\r\n        });\r\n        createUser(form)\r\n            .then(res => {\r\n                if (res && res.success) {\r\n                    let accessToken = res.accessToken.split('Bearer ')[1];\r\n\r\n                    setCookie('accessToken', accessToken);\r\n                    localStorage.setItem('refreshToken', res.refreshToken);\r\n\r\n                    (async () => {\r\n                        const data = await getUserInfo();\r\n                        if (data.success === true) {\r\n                            dispatch({\r\n                                type: CREATE_USER_SUCCESS,\r\n                                user: data.user\r\n                            });\r\n                        } else {\r\n                            dispatch({\r\n                                type: CREATE_USER_ERROR,\r\n                                errorMessage: res.message\r\n                            });\r\n                        }\r\n                    })();\r\n\r\n                } else {\r\n                    console.log('create user error ', res)\r\n                    dispatch({\r\n                        type: CREATE_USER_ERROR,\r\n                        errorMessage: res.message\r\n                    });\r\n                }\r\n            }).catch((err) => {\r\n                console.log(err)\r\n                dispatch({\r\n                    type: CREATE_USER_ERROR\r\n                });\r\n            })\r\n    };\r\n}\r\n\r\nexport const loginUserThunk: AppThunk = (form: { email: string, password: string }) => {\r\n    return function (dispatch: AppDispatch) {\r\n        dispatch({\r\n            type: LOGIN_USER_REQUEST\r\n        });\r\n        console.log('login user ', form)\r\n        loginUser(form)\r\n            .then(res => {\r\n                if (res && res.success) {\r\n                    console.log('success ', res)\r\n                    let accessToken = res.accessToken.split('Bearer ')[1];\r\n\r\n                    setCookie('accessToken', accessToken);\r\n                    localStorage.setItem('refreshToken', res.refreshToken);\r\n\r\n                    (async () => {\r\n                        const data = await getUserInfo();\r\n\r\n                        if (data.success === true) {\r\n                            dispatch({\r\n                                type: LOGIN_USER_SUCCESS,\r\n                                user: data.user\r\n                            });\r\n                        } else {\r\n                            dispatch({\r\n                                type: LOGIN_USER_ERROR,\r\n                                errorMessage: res.message\r\n                            });\r\n                        }\r\n                    })();\r\n\r\n                } else {\r\n\r\n                    dispatch({\r\n                        type: LOGIN_USER_ERROR,\r\n                        errorMessage: res.message\r\n                    });\r\n                }\r\n            }).catch((err) => {\r\n                console.log(err);\r\n                dispatch({\r\n                    type: LOGIN_USER_ERROR\r\n                });\r\n            })\r\n    };\r\n}\r\n\r\nexport const refreshTokenThunk: AppThunk = () => {\r\n    return function (dispatch: AppDispatch) {\r\n        dispatch({\r\n            type: REFRESH_TOKEN_REQUEST\r\n        });\r\n        const token = localStorage.getItem('refreshToken');\r\n        refreshToken(token)\r\n            .then(res => {\r\n                console.log('refreshToken ', res)\r\n                if (res && res.success) {\r\n                    let accessToken = res.accessToken.split('Bearer ')[1];\r\n\r\n                    setCookie('accessToken', accessToken, { expires: 1200 });\r\n                    localStorage.setItem('refreshToken', res.refreshToken);\r\n\r\n                    getUserInfo().then(data => {\r\n                        if (data.success === true) {\r\n                            dispatch({\r\n                                type: REFRESH_TOKEN_SUCCESS,\r\n                                user: data.user\r\n                            });\r\n                        } else {\r\n                            console.log('refreshToken error ', data)\r\n                            dispatch({\r\n                                type: REFRESH_TOKEN_ERROR\r\n                            });\r\n                        }\r\n                    })\r\n\r\n                } else {\r\n                    console.log('in error statement', res)\r\n                    dispatch({\r\n                        type: REFRESH_TOKEN_ERROR\r\n                    });\r\n                }\r\n            }).catch((err) => {\r\n\r\n                dispatch({\r\n                    type: REFRESH_TOKEN_ERROR\r\n                });\r\n            })\r\n    };\r\n}\r\n\r\n\r\nexport const getUser: AppThunk = () => {\r\n    console.log('get user thunk ')\r\n    return function (dispatch: AppDispatch) {\r\n        dispatch({\r\n            type: GET_USER_REQUEST\r\n        });\r\n        getUserInfo()\r\n            .then(res => {\r\n                console.log('get user body ', res)\r\n                if (res && res.success) {\r\n                    dispatch({\r\n                        type: GET_USER_SUCCESS,\r\n                        user: res.user\r\n                    })\r\n                } else {\r\n                    console.log('in get user error statement', res)\r\n                    dispatch({\r\n                        type: GET_USER_ERROR\r\n                    });\r\n                }\r\n            }).catch((err) => {\r\n                console.log('in error statement catch get user', err)\r\n                dispatch({\r\n                    type: GET_USER_ERROR\r\n                });\r\n            })\r\n    };\r\n}\r\n","import React, { useRef, useState, FC } from 'react';\r\nimport { Input } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { IInputProps } from '../../utils/types';\r\n\r\ninterface INameInputProps extends IInputProps {\r\n    placeholder?: string\r\n}\r\n\r\nexport const NameInput: FC<INameInputProps> = ({ value, onChange, name, placeholder, size = 'default' }) => {\r\n    const [fieldDisabled, setDisabled] = useState<boolean>(true);\r\n    const [error, setError] = useState<boolean>(false);\r\n    const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n    const onIconClick = () => {\r\n        setDisabled(false);\r\n        setTimeout(() => inputRef.current?.focus(), 0);\r\n    };\r\n\r\n    const onFocus = () => {\r\n        setError(false);\r\n    };\r\n\r\n    const onBlur = () => {\r\n        setDisabled(true);\r\n    };\r\n\r\n    return (\r\n        <Input\r\n            type='text'\r\n            placeholder={placeholder}\r\n            onChange={onChange}\r\n            icon={!fieldDisabled ? 'CloseIcon' : 'EditIcon'}\r\n            value={value}\r\n            ref={inputRef}\r\n            onBlur={onBlur}\r\n            onFocus={onFocus}\r\n            name={name}\r\n            error={error}\r\n            disabled={fieldDisabled}\r\n            onIconClick={onIconClick}\r\n            errorText={'Ой, произошла ошибка!'}\r\n            size={size}\r\n        />\r\n    );\r\n};","import React, { useState, useCallback, FC, ChangeEvent } from 'react';\r\nimport { useHistory, Redirect, useLocation } from 'react-router-dom';\r\nimport { createUserThunk } from '../services/actions/user';\r\nimport style from './login.module.css';\r\nimport { Button } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { useSelector, useDispatch } from '../services/hooks';\r\nimport { PasswordInput } from '../components/custom/input/password-input';\r\nimport { EmailInput } from '../components/custom/input/email-input';\r\nimport { NameInput } from '../components/custom/input/name-input';\r\nimport { Location } from \"history\";\r\nimport { TInputFormValues } from '../components/utils/types'\r\n\r\nconst RegisterPage: FC = () => {\r\n    const [form, setValue] = useState<TInputFormValues>({ email: '', password: '', name: '' });\r\n    const location = useLocation<{ from?: Location<{} | null | undefined> }>();\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const hasError = useSelector((store) => store.profile.createUserFailed);\r\n    const error = useSelector((store) => store.profile.errorMessage);\r\n    const isAuthenticated = useSelector((store) => store.profile.isAuthenticated);\r\n\r\n\r\n    const onChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setValue({ ...form, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const login = useCallback(() => {\r\n        history.replace({ pathname: '/login' })\r\n    }, [history]);\r\n\r\n    const createUser = useCallback(\r\n        (e) => {\r\n            e.preventDefault();\r\n            console.log('form register ', form)\r\n            dispatch(createUserThunk(form))\r\n        }, [form, dispatch]\r\n    );\r\n\r\n    if (isAuthenticated) {\r\n        return <Redirect to={location.state?.from || '/'} />;\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={`${style.wrapper}`}>\r\n            <h1 className={`text text_type_main-medium mb-6 ${style.title}`}>Регистрация</h1>\r\n            {hasError && <span className={`mt-4 mb-4 text text_type_main-default ${style.error}`}>{error}</span>}\r\n            <form action=\"\" className={`${style.form}`} onSubmit={createUser}>\r\n                <div className=\"mb-6\">\r\n                    <NameInput onChange={onChange} value={form.name} name={'name'} placeholder='Имя' />\r\n                </div>\r\n                <div className=\"mb-6\">\r\n                    <EmailInput onChange={onChange} value={form.email} name={'email'} />\r\n                </div>\r\n                <div className=\"mb-6\">\r\n                    <PasswordInput onChange={onChange} value={form.password} name={'password'} placeholder='Пароль' />\r\n                </div>\r\n                <div className=\"mb-20\">\r\n                    <Button type=\"primary\" size=\"medium\" >Зарегистрироваться</Button>\r\n                </div>\r\n            </form>\r\n            <div className={` ${style.text__wrapper} mb-4`}>\r\n                <span className=\"text text_type_main-default\">Уже зарегистрированы?</span>\r\n                <div className=\"ml-2\">\r\n                    <Button type=\"secondary\" size=\"medium\" onClick={login}>\r\n                        Войти\r\n                    </Button>\r\n                </div>\r\n\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default RegisterPage;","import React, { useState, useCallback, FC, ChangeEvent } from 'react';\r\nimport { useHistory, Redirect, useLocation } from 'react-router-dom';\r\nimport { resetPasswordRequest } from '../services/API';\r\nimport style from './login.module.css';\r\nimport { Button } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { EmailInput } from '../components/custom/input/email-input';\r\nimport { Location } from \"history\";\r\nimport { TFetchResponse, TInputFormValues } from '../components/utils/types';\r\nimport { useSelector } from '../services/hooks';\r\n\r\ntype TEmail = Omit<TInputFormValues, \"name\" | \"password\">\r\n\r\nconst ForgotPasswordPage: FC = () => {\r\n    const [form, setValue] = useState<TEmail>({ email: '' });\r\n    const history = useHistory();\r\n    const location = useLocation<{ from?: Location<{} | null | undefined> }>();\r\n    const [hasError, setHasError] = useState<boolean>(false);\r\n    const [error, setError] = useState<string | undefined>('');\r\n    const isAuthenticated = useSelector((store) => store.profile.isAuthenticated);\r\n\r\n    const onChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setValue({ email: e.target.value });\r\n    };\r\n\r\n    const resetPassword = useCallback(\r\n        async (e) => {\r\n            e.preventDefault();\r\n            const resetPassword: TFetchResponse = await resetPasswordRequest(form);\r\n\r\n            if (resetPassword.success === true) {\r\n                history.push('/reset-password', { resetPasswordRequest: true })\r\n            } else {\r\n                setError(resetPassword.message);\r\n                setHasError(true);\r\n            }\r\n        }, [form, history]\r\n    )\r\n\r\n    const login = useCallback(() => {\r\n        history.replace({ pathname: '/login' })\r\n    }, [history]);\r\n\r\n\r\n    if (isAuthenticated) {\r\n        return <Redirect to={location.state?.from || '/'} />;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={`${style.wrapper}`} >\r\n                <h1 className={`text text_type_main-medium mb-6 ${style.title}`}>Восстановление пароля</h1>\r\n                {hasError && <span className={`mt-4 mb-4 text text_type_main-default ${style.error}`}>{error}</span>}\r\n                <form action=\"\" className={`${style.form}`} onSubmit={resetPassword}>\r\n                    <div className=\"mb-6\">\r\n                        <EmailInput onChange={onChange} value={form.email} name={'email'} />\r\n                    </div>\r\n                    <div className=\"mb-20\">\r\n                        <Button type=\"primary\" size=\"medium\" >Восстановить</Button>\r\n                    </div>\r\n                </form>\r\n                <div className={` ${style.text__wrapper} mb-4`}>\r\n                    <span className=\"text text_type_main-default\">Вспомнили пароль?</span>\r\n                    <div className=\"ml-2\">\r\n                        <Button type=\"secondary\" size=\"medium\" onClick={login}>\r\n                            Войти\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        </>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default ForgotPasswordPage;","import React, { useState, useCallback, FC, ChangeEvent } from 'react';\r\nimport { useHistory, Redirect, useLocation } from 'react-router-dom';\r\nimport { savePasswordThunk } from '../services/actions/user';\r\nimport style from './login.module.css';\r\nimport { Button } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { useSelector, useDispatch } from '../services/hooks';\r\nimport { PasswordInput } from '../components/custom/input/password-input';\r\nimport { NameInput } from '../components/custom/input/name-input';\r\nimport { Location } from \"history\";\r\n\r\ntype TPasswordProps = {\r\n    password: string;\r\n    token: string;\r\n}\r\n\r\ninterface ILocation {\r\n    resetPasswordRequest?: Location<{} | null | undefined>;\r\n    from?: Location<{} | null | undefined>\r\n}\r\n\r\nconst ResetPasswordPage: FC = () => {\r\n    const [form, setValue] = useState<TPasswordProps>({ password: '', token: '' });\r\n    const history = useHistory();\r\n    const location = useLocation<ILocation>();\r\n    const dispatch = useDispatch();\r\n    const hasError = useSelector((store) => store.profile.savePasswordFailed);\r\n    const error = useSelector((store) => store.profile.errorMessage);\r\n    const isAuthenticated = useSelector((store) => store.profile.isAuthenticated);\r\n\r\n    const onChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setValue({ ...form, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const login = useCallback(() => {\r\n        history.replace({ pathname: '/login' })\r\n    }, [history]);\r\n\r\n    const saveNewPassword = useCallback(\r\n        (e) => {\r\n            e.preventDefault();\r\n\r\n            dispatch(savePasswordThunk(form));\r\n        }, [dispatch, form]\r\n    )\r\n\r\n    if (isAuthenticated) {\r\n        return <Redirect to={location.state?.from || '/'} />;\r\n    }\r\n\r\n    if (!location.state?.resetPasswordRequest) {\r\n        return <Redirect to={'/forgot-password'} />\r\n    }\r\n\r\n    return (\r\n        <div className={`${style.wrapper}`}>\r\n            <h1 className={`text text_type_main-medium mb-6 ${style.title}`}>Создание нового пароля</h1>\r\n            {hasError && <span className={`mt-4 mb-4 text text_type_main-default ${style.error}`}>{error}</span>}\r\n            <form action=\"\" className={`${style.form}`} onSubmit={saveNewPassword}>\r\n                <div className=\"mb-6\">\r\n                    <PasswordInput placeholder={'Введите новый пароль'} onChange={onChange} value={form.password} name={'password'} />\r\n                </div>\r\n                <div className=\"mb-6\">\r\n                    <NameInput onChange={onChange} value={form.token} name={'token'} placeholder={'Введите код из письма'} />\r\n                </div>\r\n                <div className=\"mb-20\">\r\n                    <Button type=\"primary\" size=\"medium\" >Сохранить</Button>\r\n                </div>\r\n            </form>\r\n            <div className={` ${style.text__wrapper} mb-4`}>\r\n                <span className=\"text text_type_main-default\">Вспомнили пароль?</span>\r\n                <div className=\"ml-2\">\r\n                    <Button type=\"secondary\" size=\"medium\" onClick={login}>\r\n                        Войти\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\n\r\nexport default ResetPasswordPage;","export const WS_CONNECTION_START: 'WS_CONNECTION_START' = 'WS_CONNECTION_START';\r\nexport const WS_CONNECTION_SUCCESS: 'WS_CONNECTION_SUCCESS' = 'WS_CONNECTION_SUCCESS';\r\nexport const WS_CONNECTION_ERROR: 'WS_CONNECTION_ERROR' = 'WS_CONNECTION_ERROR';\r\nexport const WS_CONNECTION_CLOSED: 'WS_CONNECTION_CLOSED' = 'WS_CONNECTION_CLOSED';\r\nexport const WS_CONNECTION_GET_MESSAGE: 'WS_CONNECTION_GET_MESSAGE' = 'WS_CONNECTION_GET_MESSAGE';\r\nexport const WS_CONNECTION_SEND_MESSAGE: 'WS_CONNECTION_SEND_MESSAGE' = 'WS_CONNECTION_SEND_MESSAGE';","import React, { useState, useEffect, useCallback, FC, ChangeEvent } from 'react';\r\nimport style from '../../pages/profile.module.css';\r\nimport { Button } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { useSelector, useDispatch } from '../../services/hooks';\r\nimport {\r\n    UPDATE_USER_ERROR,\r\n    UPDATE_USER_SUCCESS\r\n} from '../../services/constants/user';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { updateUser } from '../../services/API';\r\nimport { PasswordInput } from '../custom/input/password-input';\r\nimport { EmailInput } from '../custom/input/email-input';\r\nimport { NameInput } from '../custom/input/name-input';\r\nimport { TGetUserInfo, TUpdateUserInfo, TUser } from '../utils/types';\r\n// import { getUserInfo } from '../../services/API';\r\n// import { GET_USER_SUCCESS } from '../../services/constants/user';\r\n// import { refreshTokenThunk } from '../../services/actions/user';\r\n\r\ntype TProfileForm = {\r\n    name: string;\r\n    email: string;\r\n    password: string\r\n}\r\n\r\nconst UserSettings: FC = () => {\r\n    const dispatch = useDispatch();\r\n    const user = useSelector((store) => store.profile.user) as TUser;\r\n    const [prevState, setPrevState] = useState<TUpdateUserInfo | {}>({})\r\n    const [form, setForm] = useState<TProfileForm>({ name: user.name, email: user.email, password: 'qazswx' });\r\n    const history = useHistory();\r\n    const hasError = useSelector((store) => store.profile.updateUserSuccess);\r\n    const error = useSelector((store) => store.profile.errorMessage);\r\n\r\n    const onChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setForm({ ...form, [e.target.name]: e.target.value });\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        setForm({ name: user.name, email: user.email, password: 'qazswx' });\r\n\r\n    }, [user, history])\r\n\r\n\r\n    const updateUserInfo = useCallback(\r\n\r\n        async (form, user) => {\r\n            setPrevState({ ...user })\r\n\r\n            const updateUserRequest: TGetUserInfo = await updateUser(form);\r\n\r\n            if (updateUserRequest.success === true) {\r\n                dispatch({\r\n                    type: UPDATE_USER_SUCCESS,\r\n                    user: updateUserRequest.user\r\n                });\r\n\r\n            } else {\r\n                dispatch({\r\n                    type: UPDATE_USER_ERROR,\r\n                    errorMessage: updateUserRequest.message\r\n                })\r\n            }\r\n\r\n        }, [dispatch]\r\n    );\r\n\r\n    const cancelUserChanges = useCallback(\r\n        async (prevState) => {\r\n            const updateUserRequest: TGetUserInfo = await updateUser(prevState);\r\n\r\n            if (updateUserRequest.success === true) {\r\n                dispatch({\r\n                    type: UPDATE_USER_SUCCESS,\r\n                    user: updateUserRequest.user\r\n                });\r\n\r\n            } else {\r\n                dispatch({\r\n                    type: UPDATE_USER_ERROR,\r\n                    errorMessage: updateUserRequest.message\r\n                })\r\n            }\r\n\r\n        }, [dispatch]\r\n    );\r\n\r\n    return (\r\n\r\n        <div className={`ml-15 ${style.window}`}>\r\n            {!hasError && error && <span className={`mt-4 mb-4 text text_type_main-default ${style.error}`}>{error}</span>}\r\n            <div className=\"mb-6\">\r\n                <NameInput placeholder='Имя' onChange={onChange} value={form.name} name={'name'} />\r\n            </div>\r\n            <div className=\"mb-6\">\r\n                <EmailInput onChange={onChange} value={form.email} name={'email'} />\r\n            </div>\r\n            <div className=\"mb-6\">\r\n                <PasswordInput placeholder='Пароль' onChange={onChange} value={form.password} name={'password'} />\r\n            </div>\r\n            <div className={`mt-6 ${style.buttons}`}>\r\n                <div className=\"ml-2\">\r\n                    <Button type=\"secondary\" size=\"medium\" onClick={() => cancelUserChanges(prevState)}>\r\n                        Отмена\r\n                    </Button>\r\n                </div>\r\n                <div className=\"ml-2\">\r\n                    <Button type=\"primary\" size=\"medium\" onClick={() => updateUserInfo(form, user)}>\r\n                        Сохранить\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default UserSettings;","import React, { FC, useMemo } from 'react';\r\nimport style from './orders-feed.module.css';\r\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { getDate } from '../../services/utils';\r\nimport { useSelector } from '../../services/hooks';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\n\r\ntype TProps = {\r\n    _id: string,\r\n    createdAt: string,\r\n    updatedAt: string,\r\n    status: string,\r\n    number: number,\r\n    name: string,\r\n    ingredients: string[]\r\n}\r\n\r\nconst OrderCutMode: FC<TProps> = (props) => {\r\n    const number = props.number;\r\n    const createdAt = getDate(props.createdAt);\r\n    const name = props.name;\r\n    const status = props.status;\r\n    const ingredients = useSelector((store) => store.ingredients.ingredients);\r\n    const propsIngredients = props.ingredients;\r\n    const history = useHistory();\r\n    const location = useLocation<any>();\r\n\r\n    //Get Total Sum\r\n    const orderTotalSum = useMemo(() => {\r\n        let totalSum = 0;\r\n        ingredients!.forEach(item => {\r\n            for (let i = 0; i < propsIngredients.length; i++) {\r\n                if (item._id === propsIngredients[i]) {\r\n                    totalSum += item.price\r\n                };\r\n            }\r\n        });\r\n        return totalSum;\r\n    }, [ingredients, propsIngredients]);\r\n\r\n    // Get All Orders Images\r\n    const orderIngredientsImages = useMemo(() => {\r\n        let images = [] as string[];\r\n        ingredients!.forEach(item => {\r\n            for (let i = 0; i < propsIngredients.length; i++) {\r\n                if (item._id === propsIngredients[i]) {\r\n                    const src = item['image_mobile'] as string;\r\n                    if (!images.includes(src)) {\r\n                        images.push(src)\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        if (images.length > 5) {\r\n            return images.splice(0, 5)\r\n        }\r\n\r\n        return images;\r\n\r\n    }, [ingredients, propsIngredients])\r\n\r\n    const handleClick = () => {\r\n\r\n        console.log('location.pathname order ', location.pathname)\r\n\r\n        if (location.pathname === '/feed') {\r\n            history.replace({\r\n                pathname: `/feed/${props._id}`,\r\n                state: {\r\n                    backgroundFeed: location,\r\n                    prevPath: location.pathname\r\n                }\r\n            })\r\n        };\r\n\r\n        if (location.pathname === '/profile/orders') {\r\n\r\n            history.replace({\r\n                pathname: `/profile/orders/${props._id}`,\r\n                state: {\r\n                    backgroundProfile: location,\r\n                    prevPath: location.pathname,\r\n                    from: location\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={`${style.wrapper} ${style.wrapper__listMode} pr-6 pl-6`} onClick={handleClick}>\r\n            <span className={`text text_type_main-medium ${style.order__number} mt-6`}>{`#${number}`}</span>\r\n            <span className={`text text_type_main-default text_color_inactive ${style.order__date} mt-6`}>{createdAt}</span>\r\n            <span className={`text text_type_main-medium ${style.order__name} mt-6`}>{name}</span>\r\n            {location.pathname === '/profile/orders' && status === 'done' && (\r\n                <span className={`text text_type_main-default ${style.order__statusDone} mt-2`}>Выполнен</span>\r\n            )}\r\n            {location.pathname === '/profile/orders' && status !== 'done' && (\r\n                <span className={`text text_type_main-default ${style.order__status} mt-2`}>{status}</span>\r\n            )}\r\n            <div className={`${style.order__list} mt-6 mb-6`}>\r\n                <div className={`${style.order__listItem} ${style.order__listItemCM}`}>\r\n\r\n                    {orderIngredientsImages.map((item, index) => <img alt=\"ingredient\" key={index} src={item} className={`${style.burgerItem__icon} ${style.burgerItem__iconCM}`} />)}\r\n                </div >\r\n                <div className={`${style.order__price} ml-6 mt-6 mb-6 pt-11 pb-11`}>\r\n                    <span className={`text text_type_main-medium ${style.order__priceNumber}`}>{orderTotalSum}</span>\r\n                    <CurrencyIcon type=\"primary\" />\r\n                </div >\r\n            </div >\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\n\r\nexport default OrderCutMode;","import React, { FC } from 'react';\r\nimport style from '../../pages/profile.module.css';\r\nimport OrderCutMode from '../orders-feed/order-cut-mode';\r\nimport { useSelector } from '../../services/hooks';\r\n\r\n\r\nconst UserOrdersFeed: FC = () => {\r\n    const orders = useSelector((store) => store.orders.orders);\r\n\r\n    return (\r\n        <div className={`ml-15 ${style.ordersFeed} pr-2`}>\r\n            {orders.map((item, index) => {\r\n                return <div className=\"mb-6\" key={item._id + index}>\r\n                    <OrderCutMode\r\n                        _id={item._id}\r\n                        createdAt={item.createdAt}\r\n                        updatedAt={item.updatedAt}\r\n                        status={item.status}\r\n                        number={item.number}\r\n                        name={item.name}\r\n                        ingredients={item.ingredients} />\r\n                </div>\r\n            })}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default UserOrdersFeed;","import React, { useEffect, useCallback, FC } from 'react';\r\nimport style from './profile.module.css';\r\nimport { useSelector, useDispatch } from '../services/hooks';\r\nimport {\r\n    LOGOUT_SUCCESS\r\n} from '../services/constants/user';\r\nimport {\r\n    WS_CONNECTION_START,\r\n    WS_CONNECTION_CLOSED\r\n} from '../services/constants/socket';\r\nimport { logoutUser, WS_URL } from '../services/API';\r\nimport { useHistory, NavLink, useLocation, Redirect } from 'react-router-dom';\r\nimport { deleteCookie, getCookie } from '../services/utils';\r\nimport { TFetchResponse } from '../components/utils/types';\r\nimport UserSettings from '../components/profile/user-settings';\r\nimport UserOrdersFeed from '../components/profile/user-orders-feed';\r\n\r\nconst ProfilePage: FC = () => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const location = useLocation<any>();\r\n    let path = location.pathname;\r\n    const accessToken = getCookie('accessToken');\r\n    const isAuthenticated = useSelector((store) => store.profile.isAuthenticated);\r\n    const getUserError = useSelector(store => store.profile.getUserError);\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: WS_CONNECTION_START, payload: `${WS_URL}/all?token=${accessToken}` });\r\n        return () => {\r\n            dispatch({ type: WS_CONNECTION_CLOSED });\r\n        };\r\n    }, [accessToken, dispatch])\r\n\r\n\r\n    const signOut = useCallback(async () => {\r\n        const logoutRequest: TFetchResponse = await logoutUser();\r\n\r\n        if (logoutRequest.success === true) {\r\n            deleteCookie('accessToken');\r\n\r\n            dispatch({\r\n                type: LOGOUT_SUCCESS\r\n            })\r\n        }\r\n    }, [dispatch])\r\n\r\n    const logout = useCallback(\r\n        () => {\r\n            signOut().then(() => {\r\n                history.replace('/login');\r\n            });\r\n        }, [signOut, history]\r\n    )\r\n\r\n    if (!isAuthenticated && getUserError) {\r\n        return <Redirect to={location.state?.from || '/'} />;\r\n    }\r\n\r\n    return (\r\n\r\n        <div className={style.wrapper}>\r\n            <div className={style.profile}>\r\n                <nav className={style.nav}>\r\n                    <nav className={`pl-4 ${style.list}`}>\r\n                        <NavLink exact to='/profile' className={`text text_type_main-medium text_color_inactive ${style.listItem}`} activeClassName={style.activeNavLink}>\r\n                            Профиль\r\n                        </NavLink>\r\n                        <NavLink exact to='/profile/orders' className={`text text_type_main-medium text_color_inactive ${style.listItem}`} activeClassName={style.activeNavLink}>\r\n                            История заказов\r\n                        </NavLink>\r\n                        <NavLink to='/login' onClick={logout} className={`text text_type_main-medium text_color_inactive ${style.listItem}`} activeClassName={style.activeNavLink}>\r\n                            Выход\r\n                        </NavLink>\r\n                    </nav>\r\n                </nav>\r\n\r\n                {path === '/profile' && <UserSettings />}\r\n                {path === '/profile/orders' && <UserOrdersFeed />}\r\n            </div>\r\n            <span className={`text text_type_main-default text_color_inactive mt-8 ${style.undertitle}`}>В этом разделе вы можете\r\n                изменить свои персональные данные</span>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default ProfilePage;","export const ItemTypes = {\r\n    INGREDIENT: 'ingredient',\r\n}\r\n","import React, { useEffect, useRef, useMemo, FC } from 'react';\r\nimport BurgerIngredientsStyle from './burger-ingredients.module.css'\r\nimport { Counter, Tab, CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { TItem } from '../utils/types';\r\nimport { ItemTypes } from '../utils/ItemTypes';\r\nimport { useDrag } from 'react-dnd';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { useSelector } from '../../services/hooks';\r\n\r\n\r\ninterface IIngredientProps {\r\n    item: TItem,\r\n}\r\n\r\ntype TItemWithCounter = TItem & { counter?: number }\r\n\r\nconst Ingredient: FC<IIngredientProps> = ({ item }) => {\r\n    let count = 0;\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const menuCounter = useSelector((store) => store.ingredients.counterIngredients);\r\n    const element: TItemWithCounter[] = useMemo(() => (menuCounter.filter((elem: TItemWithCounter) => elem._id === item._id)), [menuCounter, item._id])\r\n\r\n    if (element[0][\"counter\"] !== undefined && element[0][\"counter\"] >= 1) {\r\n        count = element[0][\"counter\"]\r\n    } else {\r\n        count = 0\r\n    }\r\n\r\n\r\n    const [, drag] = useDrag({\r\n        type: ItemTypes.INGREDIENT,\r\n        item: item,\r\n        collect: monitor => ({\r\n            isDragging: !!monitor.isDragging()\r\n        })\r\n    });\r\n\r\n    const handleClick = (item: TItem) => {\r\n\r\n        history.push({\r\n            pathname: `/ingredients/${item._id}`,\r\n            state: {\r\n                backgroundIngredients: location\r\n            }\r\n        });\r\n    };\r\n\r\n\r\n    return (\r\n        <div ref={drag} className={`${BurgerIngredientsStyle.card}`} onClick={() => { handleClick(item) }}>\r\n            {count > 0 && <Counter count={count} size=\"default\" />}\r\n            <img src={item.image} alt={item.name} />\r\n            <span className={`${BurgerIngredientsStyle.price} text text_type_main-default`}>{item.price} <CurrencyIcon type=\"primary\" /></span>\r\n            <span className={`${BurgerIngredientsStyle.text} text text_type_main-default`}>{item.name}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst BurgerIngredients: FC = () => {\r\n    const [current, setCurrent] = React.useState('one');\r\n    const ingredients = useSelector((store) => store.ingredients.ingredients);\r\n    const buns: TItem[] = [];\r\n    const sauces: TItem[] = [];\r\n    const main: TItem[] = [];\r\n    const tabsRef = useRef(null);\r\n    const containerRef = useRef<HTMLDivElement>(null);\r\n    const bunsTitleRef = useRef<HTMLHeadingElement>(null);\r\n    const saucesTitleRef = useRef<HTMLHeadingElement>(null);\r\n    const mainTitleRef = useRef<HTMLHeadingElement>(null);\r\n\r\n    const clickBun = () => {\r\n        setCurrent('one');\r\n        bunsTitleRef!.current!.scrollIntoView({ behavior: 'smooth' });\r\n    };\r\n    const clickSauces = () => {\r\n        setCurrent('two');\r\n        saucesTitleRef!.current!.scrollIntoView({ behavior: 'smooth' });\r\n    };\r\n\r\n    const clickMain = () => {\r\n        setCurrent('three');\r\n        mainTitleRef!.current!.scrollIntoView({ behavior: 'smooth' });\r\n    };\r\n\r\n    useEffect(\r\n        () => {\r\n            const startPosition: number = bunsTitleRef.current!.getBoundingClientRect().y;\r\n            const container = containerRef.current!;\r\n            const handleScroll = (start: number) => {\r\n                const saucesPosition = saucesTitleRef.current!.getBoundingClientRect().y;\r\n                const mainPosition = mainTitleRef.current!.getBoundingClientRect().y;\r\n                if (saucesPosition <= start && mainPosition > start) {\r\n                    setCurrent('two')\r\n                } else if (mainPosition <= start) {\r\n                    setCurrent('three')\r\n                } else {\r\n                    setCurrent('one')\r\n                }\r\n\r\n            };\r\n\r\n            container.addEventListener('scroll', function () { handleScroll(startPosition) })\r\n\r\n            return () => {\r\n                container.removeEventListener('scroll', function () { handleScroll(startPosition) })\r\n            };\r\n        }, []\r\n    );\r\n\r\n\r\n\r\n    if (ingredients !== undefined) {\r\n        ingredients.forEach((item: TItem) => {\r\n            if (item.type === 'bun') {\r\n                buns.push(item);\r\n            } else if (item.type === 'sauce') {\r\n                sauces.push(item);\r\n            } else {\r\n                main.push(item);\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    return (\r\n        <section className={`${BurgerIngredientsStyle.wrapper}`}>\r\n            <h1 className={`${BurgerIngredientsStyle.title} text text_type_main-large`}>Соберите бургер</h1>\r\n\r\n            <div style={{ display: 'flex' }} ref={tabsRef}>\r\n                <Tab value=\"one\" active={current === 'one'} onClick={clickBun}>\r\n                    Булки\r\n                </Tab>\r\n\r\n                <Tab value=\"two\" active={current === 'two'} onClick={clickSauces}>\r\n                    Соусы\r\n                </Tab>\r\n                <Tab value=\"three\" active={current === 'three'} onClick={clickMain}>\r\n                    Начинки\r\n                </Tab>\r\n            </div>\r\n            <section ref={containerRef} className={`${BurgerIngredientsStyle.scrollArea}`} >\r\n                <h2 className={`${BurgerIngredientsStyle.subTitle} text text_type_main-medium`} ref={bunsTitleRef}>Булки</h2>\r\n                {buns.map((item, index) => (\r\n                    <Ingredient item={item} key={index} />\r\n                ))}\r\n                <h2 className={`${BurgerIngredientsStyle.subTitle} text text_type_main-medium`} ref={saucesTitleRef}>Соусы</h2>\r\n                {sauces.map((item, index) => (\r\n                    <Ingredient item={item} key={index} />\r\n                ))}\r\n                <h2 className={`${BurgerIngredientsStyle.subTitle} text text_type_main-medium`} ref={mainTitleRef}>Начинки</h2>\r\n                {main.map((item, index) => (\r\n                    <Ingredient item={item} key={index} />\r\n                ))}\r\n\r\n            </section>\r\n\r\n        </section >\r\n    )\r\n}\r\n\r\n\r\nexport default BurgerIngredients;\r\n\r\n","import React, { FC } from 'react';\r\nimport ModalOverlayStyle from '../modal/modal-overlay.module.css';\r\n\r\nexport interface IComponentProps {\r\n    closeModal: Function\r\n}\r\n\r\nconst ModalOverlay: FC<IComponentProps> = ({ closeModal }) => {\r\n\r\n    return (\r\n        <div onClick={() => closeModal()} className={`${ModalOverlayStyle.modal__overlay}`} />\r\n    )\r\n}\r\n\r\n\r\nexport default ModalOverlay","import React, { useEffect, FC, useCallback } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CloseIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport ModalStyle from '../modal/modal.module.css';\r\nimport ModalOverlay from './modal-overlay';\r\n\r\nconst modalRoot = document.getElementById(\"react-modals\") as HTMLElement;\r\n\r\nexport interface IComponentProps {\r\n    title?: string;\r\n    closeModal: () => void;\r\n    children: React.ReactNode;\r\n}\r\n\r\nconst Modal: FC<IComponentProps> = ({ title, closeModal, children }) => {\r\n    // ESC button on keyboard\r\n    const keyboardESC = 27;\r\n\r\n    const closeModalWithKey = useCallback((e: KeyboardEvent) => {\r\n        if (e.keyCode === keyboardESC) {\r\n            closeModal()\r\n        }\r\n    }, [closeModal])\r\n\r\n    useEffect(() => {\r\n        document.addEventListener(\"keydown\", closeModalWithKey, false);\r\n\r\n        return () => {\r\n            document.removeEventListener(\"keydown\", closeModalWithKey, false);\r\n        };\r\n    }, [closeModalWithKey]);\r\n\r\n\r\n    return ReactDOM.createPortal(\r\n        (\r\n            <div id='modal' className={`${ModalStyle.modal__wrapper}`}>\r\n                <ModalOverlay closeModal={closeModal}></ModalOverlay>\r\n                <div className={`${ModalStyle.modal} p-10`} >\r\n                    <header className={`${ModalStyle.modal__header}`}>\r\n                        {title && <h1 className=\"text text_type_main-medium\">{title}</h1>}\r\n                        <div id='closeModalIcon'>\r\n                            <CloseIcon type=\"primary\" onClick={closeModal} />\r\n                        </div>\r\n                    </header>\r\n                    <main className={`${ModalStyle.modal__card}`}>\r\n                        {children}\r\n                    </main>\r\n                </div>\r\n            </div>\r\n        ),\r\n        modalRoot\r\n    );\r\n}\r\n\r\n\r\nexport default Modal","export default __webpack_public_path__ + \"static/media/done.516856c7.png\";","import React, { FC } from 'react';\r\nimport OrderDetailsStyle from '../order-details/order-details.module.css'\r\nimport SuccessfulOrder from '../../images/done.png';\r\nimport { useSelector } from '../../services/hooks';\r\n\r\nconst OrderDetails: FC = () => {\r\n    const orderNumber = useSelector((store) => store.ingredients.order);\r\n    const orderNumberRequest = useSelector((store) => store.ingredients.sendOrderRequest);\r\n    const orderNumberSuccess = useSelector((store) => store.ingredients.sendOrderSuccess);\r\n\r\n    if (orderNumberRequest) {\r\n        return (\r\n            <span className={`${OrderDetailsStyle.text} text text_type_main-medium`}>Загрузка...</span>\r\n        )\r\n    } else if (orderNumberSuccess) {\r\n        return (\r\n            <>\r\n                <h1 className={`${OrderDetailsStyle.title} text text_type_digits-large  mt-5 mb-8`}>{orderNumber}</h1>\r\n                <span className={`${OrderDetailsStyle.text} text text_type_main-medium`}>идентификатор заказа</span>\r\n                <img className={`${OrderDetailsStyle.image} mt-10 mb-10`} src={SuccessfulOrder} alt=\"Заказ начали готовить\" />\r\n                <span className={`${OrderDetailsStyle.text} text text_type_main-default`}>Ваш заказ начали готовить</span>\r\n                <span className={`${OrderDetailsStyle.text} mt-8 text text_type_main-default text_color_inactive`}>Дождитесь готовности на орбитальной станции</span>\r\n            </>\r\n        )\r\n    } else {\r\n        return (\r\n            <>\r\n                <h1 className={`${OrderDetailsStyle.title} text text_type_digits-large  mt-5 mb-8`}>Ошибка!</h1>\r\n                <span className={`${OrderDetailsStyle.text} text text_type_main-medium`}>Свяжитесь с нами</span>\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport default OrderDetails","import React, { useState, useRef, useCallback, FC } from 'react';\r\nimport BurgerConstructorStyle from './burger-constructor.module.css'\r\nimport { ConstructorElement, CurrencyIcon, Button, DragIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { TItem } from '../utils/types';\r\nimport Modal from '../modal/modal';\r\nimport OrderDetails from '../order-details/OrderDetails';\r\nimport { ItemTypes } from '../utils/ItemTypes';\r\nimport { useDrop, useDrag, DropTargetMonitor } from 'react-dnd';\r\nimport { sendOrderItems } from '../../services/actions/ingredients';\r\nimport {\r\n    DELETE_BURGER_INGREDIENT,\r\n    ADD_BURGER_INGREDIENT,\r\n    ADD_BUN,\r\n    CHANGE_INGREDIENTS_POSITION,\r\n    ADD_ITEM_TO_COUNTER,\r\n    DELETE_ITEM_FROM_COUNTER\r\n} from '../../services/constants/ingredients';\r\nimport { useSelector, useDispatch } from '../../services/hooks';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\ninterface IIngredientProps {\r\n    item: TItem;\r\n    id?: string;\r\n    index: number;\r\n    deleteItem: (item: TItem) => void;\r\n    moveCard: (dragIndex: number, hoverIndex: number) => void;\r\n}\r\n\r\ninterface DragItem {\r\n    index: number\r\n    id: string\r\n    type: string\r\n}\r\n\r\ninterface ClientOffset {\r\n    x: number;\r\n    y: number;\r\n}\r\n\r\ntype TItemCopied = TItem & { counter?: number; }\r\n\r\n\r\nconst DraggableIngredient: FC<IIngredientProps> = ({ item, id, index, deleteItem, moveCard }) => {\r\n    const ref = useRef<HTMLDivElement>(null);\r\n\r\n    const [{ handlerId }, drop] = useDrop({\r\n        accept: ItemTypes.INGREDIENT,\r\n        collect(monitor) {\r\n            return {\r\n                handlerId: monitor.getHandlerId(),\r\n            };\r\n        },\r\n        hover(item: DragItem, monitor: DropTargetMonitor) {\r\n            if (!ref.current) {\r\n                return;\r\n            }\r\n            const dragIndex = item.index;\r\n            const hoverIndex = index;\r\n\r\n            if (dragIndex === hoverIndex) {\r\n                return;\r\n            }\r\n\r\n            const hoverBoundingRect = ref.current?.getBoundingClientRect();\r\n            const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\r\n            const clientOffset = monitor.getClientOffset() as ClientOffset;\r\n            const hoverClientY = clientOffset.y - hoverBoundingRect.top;\r\n            if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\r\n                return;\r\n            }\r\n\r\n            if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\r\n                return;\r\n            }\r\n\r\n            moveCard(dragIndex, hoverIndex)\r\n            item.index = hoverIndex;\r\n        },\r\n    });\r\n    const [{ isDragging }, drag] = useDrag({\r\n        type: ItemTypes.INGREDIENT,\r\n        item: () => {\r\n            return { id, index };\r\n        },\r\n        collect: (monitor) => ({\r\n            isDragging: monitor.isDragging(),\r\n        }),\r\n    });\r\n    const opacity = isDragging ? 0 : 1;\r\n    drag(drop(ref));\r\n\r\n    return (\r\n        <div ref={ref} data-handler-id={handlerId} style={{ opacity }} id={item._id} onClick={() => deleteItem(item)} className={`mt-2 mb-2 ${BurgerConstructorStyle.item}`} >\r\n            <DragIcon type=\"primary\" />\r\n            <ConstructorElement\r\n                isLocked={false}\r\n                text={item.name}\r\n                price={item.price}\r\n                thumbnail={item.image}\r\n            />\r\n        </div>)\r\n}\r\n\r\n\r\nconst BurgerConstructor: FC = () => {\r\n    const totalPrice = useSelector((store) => store.ingredients.totalPrice);\r\n    const ingredients = useSelector((store) => store.ingredients.currentIngredients);\r\n    const isBunAdded = useSelector((store) => store.ingredients.isBunAdded);\r\n    const bun = useSelector((store) => store.ingredients.bun) as TItem;\r\n    const dispatch = useDispatch();\r\n    const [showModal, setShowModal] = useState<boolean>(false);\r\n    const order = useSelector((store) => store.ingredients.order);\r\n    const counterIngredients = useSelector((store) => store.ingredients.counterIngredients);\r\n    const user = useSelector((store) => store.profile.user);\r\n    const isAuthenticated = useSelector((store) => store.profile.isAuthenticated);\r\n    const history = useHistory();\r\n\r\n    const moveCard = useCallback((dragIndex: number, hoverIndex: number) => {\r\n        const dragCard = ingredients[dragIndex];\r\n        const newCards = [...ingredients];\r\n        newCards.splice(dragIndex, 1);\r\n        newCards.splice(hoverIndex, 0, dragCard);\r\n\r\n        dispatch({\r\n            type: CHANGE_INGREDIENTS_POSITION,\r\n            newCards\r\n        })\r\n    }, [dispatch, ingredients]);\r\n\r\n\r\n    function showModalWindow() {\r\n        const ingredientsIds = ingredients.map((item: TItem) => item._id);\r\n\r\n        if (!isAuthenticated && Object.keys(user).length <= 0) {\r\n            history.push({ pathname: '/login' })\r\n        } else {\r\n            if (isBunAdded && ingredientsIds === undefined) {\r\n                dispatch(sendOrderItems([bun._id]));\r\n                setShowModal(true)\r\n            } else if (isBunAdded && ingredientsIds !== undefined) {\r\n                let elements: string[] = ingredientsIds.concat(bun._id)\r\n                dispatch(sendOrderItems(elements));\r\n                setShowModal(true)\r\n            } else {\r\n                alert('Добавьте Булку в Ваш заказ')\r\n            }\r\n        }\r\n    }\r\n\r\n    function closeModalWindow() {\r\n        setShowModal(false)\r\n    }\r\n\r\n    function addItem(item: TItem) {\r\n        if (item.type === 'bun') {\r\n            dispatch({\r\n                type: ADD_BUN,\r\n                item: item,\r\n                price: item[\"price\"]\r\n            })\r\n        } else {\r\n            dispatch({\r\n                type: ADD_BURGER_INGREDIENT,\r\n                item: item,\r\n                price: item[\"price\"]\r\n            })\r\n        }\r\n\r\n        increaseCounter(item)\r\n    }\r\n\r\n    function increaseCounter(item: TItem) {\r\n        const copiedCounterArray: TItemCopied[] = [...counterIngredients];\r\n        const index = copiedCounterArray.findIndex(elem => elem._id === item._id);\r\n        let count: number | undefined = copiedCounterArray[index][\"counter\"];\r\n\r\n        if (item.type === 'bun') {\r\n            let anotherBunIndex = copiedCounterArray.findIndex(elem => elem.type === \"bun\" && elem.name !== item.name);\r\n            copiedCounterArray[anotherBunIndex][\"counter\"] = 0\r\n            count = 2;\r\n        } else if (count !== undefined && count >= 1) {\r\n            count = count + 1;\r\n        } else {\r\n            count = 1;\r\n        }\r\n\r\n        copiedCounterArray[index] = {\r\n            ...copiedCounterArray[index],\r\n            counter: count\r\n        }\r\n\r\n        dispatch({\r\n            type: ADD_ITEM_TO_COUNTER,\r\n            copiedCounterArray\r\n        });\r\n\r\n    }\r\n\r\n    function deleteItem(item: TItem) {\r\n        let elemIndex: number = ingredients.findIndex((elem: TItem) => elem._id === item._id);\r\n        dispatch({\r\n            type: DELETE_BURGER_INGREDIENT,\r\n            elemIndex: elemIndex,\r\n            price: item[\"price\"]\r\n        })\r\n\r\n        decreaseCounter(item);\r\n    }\r\n\r\n    function decreaseCounter(item: TItem) {\r\n        const copiedCounterArray = [...counterIngredients];\r\n        const index = copiedCounterArray.findIndex((elem: TItem) => elem._id === item._id);\r\n        let count = copiedCounterArray[index][\"counter\"] as number;\r\n        let newCount = count - 1\r\n\r\n        copiedCounterArray[index] = {\r\n            ...copiedCounterArray[index],\r\n            counter: newCount\r\n        }\r\n\r\n\r\n        dispatch({\r\n            type: DELETE_ITEM_FROM_COUNTER,\r\n            copiedCounterArray\r\n        })\r\n    }\r\n\r\n\r\n\r\n    const [{ isOver }, drop] = useDrop({\r\n        accept: ItemTypes.INGREDIENT,\r\n        drop: (item: TItem, monitor) => {\r\n            item.hasOwnProperty('name') && addItem(item);\r\n        },\r\n        collect: (monitor) => ({\r\n            isOver: !!monitor.isOver()\r\n        })\r\n    })\r\n\r\n\r\n    return (\r\n        <div id=\"burgerConstructor\" ref={drop} style={{ border: isOver ? \"5px solid red\" : \"5px solid transparent\" }} className={`${BurgerConstructorStyle.wrapper}`} >\r\n            {isBunAdded && <div key={'bun-top' + bun._id} className={`mt-2 mb-2 ${BurgerConstructorStyle.item} ml-8`} >\r\n                <ConstructorElement\r\n                    type=\"top\"\r\n                    isLocked={true}\r\n                    text={`${bun.name} (верх)`}\r\n                    price={bun.price}\r\n                    thumbnail={bun.image}\r\n                />\r\n            </div>}\r\n\r\n            <section className={` ${BurgerConstructorStyle.scrollArea} mt-2 mb-2`} >\r\n                {ingredients.length > 0 && ingredients.map((item: TItem, i: number) =>\r\n                    <DraggableIngredient moveCard={moveCard} deleteItem={deleteItem} item={item} index={i} key={i + item._id} />)}\r\n            </section>\r\n            {\r\n                isBunAdded && <div key={'bun-bottom' + bun._id} className={`mt-2 mb-2 ${BurgerConstructorStyle.item} ml-8`} >\r\n                    <ConstructorElement\r\n                        type=\"bottom\"\r\n                        isLocked={true}\r\n                        text={`${bun.name} (низ)`}\r\n                        price={bun.price}\r\n                        thumbnail={bun.image}\r\n                    />\r\n                </div>\r\n            }\r\n\r\n            <div className={`mt-10 ${BurgerConstructorStyle.priceCard}`}>\r\n                <span className={`${BurgerConstructorStyle.price} text text_type_main-large`}>\r\n                    {totalPrice && totalPrice}\r\n                </span>\r\n                <CurrencyIcon type=\"primary\" />\r\n                <Button onClick={() => showModalWindow()} type=\"primary\" size=\"medium\">Оформить заказ</Button>\r\n            </div>\r\n\r\n            {order !== undefined && showModal === true && <Modal closeModal={closeModalWindow}><OrderDetails /></Modal>}\r\n        </div >\r\n    )\r\n}\r\n\r\n\r\nexport default BurgerConstructor;","import React, { FC } from 'react';\r\nimport AppStyle from '../components/app/app.module.css'\r\nimport BurgerIngredients from '../components/burger-ingredients/burger-ingredients';\r\nimport BurgerConstructor from '../components/burger-constructor/burger-constructor';\r\nimport { DndProvider } from 'react-dnd';\r\nimport { HTML5Backend } from 'react-dnd-html5-backend';\r\n\r\nconst BurgerConstructorPage: FC = () => {\r\n\r\n    return (<main className={`${AppStyle.main}`}>\r\n        <DndProvider backend={HTML5Backend}>\r\n            <BurgerIngredients />\r\n            <BurgerConstructor />\r\n        </DndProvider>\r\n    </main>)\r\n}\r\n\r\nexport default BurgerConstructorPage;","import React, { useEffect, useMemo, FC } from 'react';\r\nimport style from './orders-feed.module.css';\r\nimport OrderCutMode from '../components/orders-feed/order-cut-mode';\r\nimport { useSelector, useDispatch } from '../services/hooks';\r\nimport { WS_CONNECTION_START, WS_CONNECTION_CLOSED } from '../services/constants/socket';\r\nimport { WS_URL } from '../services/API';\r\n\r\n\r\nconst OrdersFeedPage: FC = () => {\r\n    const dispatch = useDispatch();\r\n    const total = useSelector((store) => store.orders.total);\r\n    const totalToday = useSelector((store) => store.orders.totalToday);\r\n    const orders = useSelector((store) => store.orders.orders);\r\n\r\n    const ordersDone = useMemo(() => {\r\n        return orders.filter(item => item.status === 'done').slice(0, 5);\r\n    }, [orders]);\r\n\r\n    const ordersInProgress = useMemo(() => {\r\n        return orders.filter(item => item.status === 'pending').slice(0, 10);\r\n    }, [orders]);\r\n\r\n    // web socket connection on load\r\n    useEffect(() => {\r\n\r\n        dispatch({ type: WS_CONNECTION_START, payload: `${WS_URL}/all` });\r\n        return () => {\r\n            dispatch({ type: WS_CONNECTION_CLOSED });\r\n        };\r\n    }, [dispatch]);\r\n\r\n\r\n    return (\r\n        <div className={`${style.wrapper}`}>\r\n            <h1 className=\"mt-10 text text_type_main-large\">Лента заказов</h1>\r\n            <div className={`${style.feed__wrapper}`}>\r\n                <ul className={`${style.feed__list}`}>\r\n                    {orders.map((item, index) => {\r\n                        return (<li className={`${style.feed__listItem} mb-4`} key={item._id + index}>\r\n                            <OrderCutMode\r\n                                _id={item._id}\r\n                                createdAt={item.createdAt}\r\n                                updatedAt={item.updatedAt}\r\n                                status={item.status}\r\n                                number={item.number}\r\n                                name={item.name}\r\n                                ingredients={item.ingredients} />\r\n                        </li>)\r\n                    })}\r\n                </ul>\r\n                <div className={`${style.tracker} ml-15`}>\r\n                    <div className={`${style.tracker__ordersWrapper}`}>\r\n                        <div className={`${style.tracker__orders} mr-9`}>\r\n                            <span className={`text text_type_main-medium ${style.tracker__orderTitle} mb-6 `}>Готовы:</span>\r\n                            <ul className={`${style.tracker__orderList}`}>\r\n                                {ordersDone.map((item, index) => (\r\n                                    <li key={item._id + index} className={`text text_type_main-default ${style.tracker__orderListItem} ${style.tracker__orderListItemDone} mb-2`}>{item.number}</li>\r\n                                ))}\r\n                            </ul>\r\n                        </div>\r\n                        <div className={`${style.tracker__orders}`}>\r\n                            <span className={`text text_type_main-medium ${style.tracker__orderTitle} mb-6`}>В работе:</span>\r\n                            <ul className={`${style.tracker__orderList}`}>\r\n                                {ordersInProgress.map((item, index) => (\r\n                                    <li key={item._id + index} className={`text text_type_main-default ${style.tracker__orderListItem} mb-2`}>{item.number}</li>\r\n                                ))}\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <div className={`${style.tracker__info} mt-15`}>\r\n                        <span className={`text text_type_main-medium ${style.tracker__infoTitle}`}>Выполенено за все время:</span>\r\n                        <span className={` text text_type_digits-large ${style.tracker__infoText}`}>{total}</span>\r\n                    </div>\r\n                    <div className={`${style.tracker__info} mt-15`}>\r\n                        <span className={`text text_type_main-medium ${style.tracker__infoTitle}`}>Выполнено за сегодня:</span>\r\n                        <span className={`text text_type_digits-large ${style.tracker__infoText}`}>{totalToday}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default OrdersFeedPage;","import style from './login.module.css';\r\nimport React, { FC } from 'react';\r\n\r\nconst NotFound404: FC = () => {\r\n    return (\r\n        <div className={`${style.container}`}>\r\n            <h1 className='text text_type_main-medium'>Oops! 404 Error</h1>\r\n            <p className=\"text text_type_main-default mt-6\">The page you requested does not exist</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound404;","import React, { FC } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from '../../services/hooks';\r\nimport { getCookie } from '../../services/utils';\r\n\r\ninterface IProtectedRouteProps {\r\n    children: React.ReactElement;\r\n    path: string;\r\n    exact?: boolean;\r\n}\r\n\r\nconst ProtectedRoute: FC<IProtectedRouteProps> = ({ children, ...rest }) => {\r\n    const isAuthenticated = useSelector(store => store.profile.isAuthenticated);\r\n    const cookie = getCookie('accessToken');\r\n\r\n    // const uploadUserInfo = useCallback(() => {\r\n    //     if (!isAuthenticated) {\r\n    //         const getUserRequest: any = getUserInfo();\r\n\r\n    //         if (getUserRequest.success === false) {\r\n\r\n    //         } else {\r\n    //             dispatch({\r\n    //                 type: GET_USER_SUCCESS,\r\n    //                 user: getUserRequest.user\r\n    //             })\r\n    //         }\r\n    //     }\r\n    // }, [dispatch, isAuthenticated]);\r\n\r\n    // uploadUserInfo()\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={({ location }) => (\r\n                (isAuthenticated || cookie) ? (\r\n                    children\r\n                ) : <Redirect\r\n                    to={{\r\n                        pathname: '/login',\r\n                        state: {\r\n                            from: location\r\n                        }\r\n                    }}\r\n\r\n                />\r\n            )\r\n            }\r\n        />\r\n    );\r\n}\r\n\r\nexport default ProtectedRoute;","import React, { useMemo, FC } from 'react';\r\nimport IngredientDetailsStyle from './ingredient-details.module.css';\r\nimport { TItem } from '../utils/types';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useSelector } from '../../services/hooks';\r\n\r\nconst IngredientDetails: FC = () => {\r\n\r\n    const { id } = useParams<{ id: string }>();\r\n    const ingredients = useSelector((store) => store.ingredients.ingredients);\r\n    const isLoading = useSelector((store) => store.ingredients)\r\n\r\n    const currentIngredient = useMemo(() => {\r\n        return ingredients.find((item: TItem) => item._id === id);\r\n    }, [ingredients, id]);\r\n\r\n\r\n    if (!isLoading) {\r\n        return null\r\n    }\r\n\r\n    if (!currentIngredient) {\r\n        return <div>Wait a little bit</div>\r\n    }\r\n\r\n    return (\r\n        <div className={IngredientDetailsStyle.container} >\r\n            <img className={`${IngredientDetailsStyle.image} mb-4`} src={currentIngredient[\"image_large\"]} alt={currentIngredient.name} />\r\n            <h1 className={`${IngredientDetailsStyle.title} text text_type_main-large`}>{currentIngredient.name}</h1>\r\n            <div className={`${IngredientDetailsStyle.nutrients} mt-8`}>\r\n                <div className={`${IngredientDetailsStyle.nutrient__column} ml-3 mr-3`}>\r\n                    <span className={`${IngredientDetailsStyle.text} text text_type_main-default text_color_inactive`}>Калории</span>\r\n                    <span id=\"calories\" className={`${IngredientDetailsStyle.text} text text_type_digits-default text_color_inactive`}>{currentIngredient.calories}</span>\r\n                </div>\r\n                <div className={`${IngredientDetailsStyle.nutrient__column} ml-3 mr-3`}>\r\n                    <span className={`${IngredientDetailsStyle.text} text text_type_main-default text_color_inactive`}>Белки, г</span>\r\n                    <span id=\"proteins\" className={`${IngredientDetailsStyle.text} text text_type_digits-default text_color_inactive`}>{currentIngredient.proteins}</span>\r\n                </div>\r\n                <div className={`${IngredientDetailsStyle.nutrient__column} ml-3 mr-3`}>\r\n                    <span className={`${IngredientDetailsStyle.text} text text_type_main-default text_color_inactive`}>Жиры, г</span>\r\n                    <span id=\"fats\" className={`${IngredientDetailsStyle.text} text text_type_digits-default text_color_inactive`}>{currentIngredient.fat}</span>\r\n                </div>\r\n                <div className={`${IngredientDetailsStyle.nutrient__column} ml-3 mr-3`}>\r\n                    <span className={`${IngredientDetailsStyle.text} text text_type_main-default text_color_inactive`}>Углеводы, г</span>\r\n                    <span id=\"carbs\" className={`${IngredientDetailsStyle.text} text text_type_digits-default text_color_inactive`}>{currentIngredient.carbohydrates}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default IngredientDetails","import React, { FC, useEffect, useMemo } from 'react';\r\nimport style from './orders-feed.module.css';\r\nimport { WS_CONNECTION_START, WS_CONNECTION_CLOSED } from '../../services/constants/socket';\r\nimport { WS_URL } from '../../services/API';\r\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { useParams, useLocation } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from '../../services/hooks';\r\nimport { TItem } from '../utils/types';\r\nimport { getDate } from '../../services/utils';\r\n\r\nconst OrderFullMode: FC = () => {\r\n    const location = useLocation<any>();\r\n    const { id } = useParams<{ id: string }>();\r\n    const dispatch = useDispatch();\r\n    const orders = useSelector((store) => store.orders.orders);\r\n    const ingredients = useSelector((store) => store.ingredients.ingredients);\r\n    const order = useMemo(() => {\r\n        return orders.find(item => item._id === id);\r\n    }, [id, orders]);\r\n\r\n    // function creates an arr of exisiting ingredients of this order\r\n    const orderIngredients = (ingredients: TItem[]) => {\r\n        let arr: TItem[] = [];\r\n        if (order !== undefined) {\r\n            order.ingredients.map((item) => {\r\n                ingredients.forEach((elem) => {\r\n                    if (elem._id === item) {\r\n                        arr.push(elem)\r\n                    }\r\n                })\r\n            })\r\n        }\r\n        return arr\r\n    }\r\n\r\n    const ingredientsOfCurrentOrder = orderIngredients(ingredients);\r\n    const orderTotalPrice = useMemo(() => {\r\n        let totalPrice: number = 0;\r\n        ingredientsOfCurrentOrder.forEach((item) => totalPrice += item.price);\r\n        return totalPrice;\r\n    }, [ingredientsOfCurrentOrder])\r\n\r\n\r\n    // web socket connection on load\r\n    useEffect(() => {\r\n        if (!location.state) dispatch({ type: WS_CONNECTION_START, payload: `${WS_URL}/all` });\r\n\r\n        return () => {\r\n            if (!location.state) dispatch({ type: WS_CONNECTION_CLOSED });\r\n        };\r\n    }, [dispatch, location.state]);\r\n\r\n\r\n    if (!order) return null;\r\n    return (\r\n        <div className={`${style.wrapper} ${style.wrapper__fullMode}`}>\r\n            <span className={`text text_type_main-medium ${style.order__number} ${style.order__numberFM}`}>{`#${order?.number}`}</span>\r\n            <span className={`text text_type_main-medium ${style.order__name} ${style.order__nameFM} mt-10`}>{order?.name}</span>\r\n            {order?.status === 'done' && <span className={`text text_type_main-default ${style.order__statusDone} mt-3`}>Выполнен</span>}\r\n            {order?.status !== 'done' && <span className={`text text_type_main-default ${style.order__status} mt-3`}>{order?.status}</span>}\r\n            <span className={`text text_type_main-medium ${style.title} mt-15 mb-6`}>Состав:</span>\r\n            <div className={`${style.order__list} ${style.order__listFM} mt-6 mb-6 pr-4`}>\r\n                {ingredientsOfCurrentOrder.map((item, index) => {\r\n                    return (<div key={item._id + index} className={`mb-6 ${style.order__listItem} ${style.order__listItemFM}`}>\r\n                        <img alt=\"ingredient\" src={item.image_mobile} className={`${style.burgerItem__icon}`} />\r\n                        <span className={`ml-4 text text_type_main-default ${style.burgerItem__name}`}>{item.name}</span>\r\n                        <div className={`${style.burgerItem__priceCard} mt-10 `}>\r\n                            <span className={`text text_type_main-medium ${style.burgerItem__price} ml-2 mr-2`}>{item.price}</span>\r\n                            <CurrencyIcon type='primary' />\r\n                        </div>\r\n                    </div >)\r\n                })}\r\n            </div >\r\n            <span className={`mt-10 text text_type_main-default text_color_inactive ${style.order__date} ${style.order__dateFM}`}>{getDate(order!.createdAt)}</span>\r\n            <div className={`${style.order__price} ${style.order__priceFM} mt-10 `}>\r\n                <span className={`text text_type_main-medium ${style.order__priceNumber}`}>{orderTotalPrice}</span>\r\n                <CurrencyIcon type=\"primary\" />\r\n            </div >\r\n        </div >\r\n    )\r\n}\r\n\r\n\r\nexport default OrderFullMode;","import React, { useCallback, useEffect, FC } from 'react';\r\nimport { Switch, Route, useHistory, useLocation } from 'react-router-dom';\r\nimport AppHeader from '../app-header/app-header';\r\nimport { useDispatch, useSelector } from '../../services/hooks';\r\nimport { getIngredients } from '../../services/actions/ingredients';\r\nimport LoginPage from '../../pages/login';\r\nimport RegisterPage from '../../pages/register';\r\nimport ForgotPasswordPage from '../../pages/forgot-password';\r\nimport ResetPasswordPage from '../../pages/reset-password';\r\nimport ProfilePage from '../../pages/profile';\r\nimport BurgerConstructorPage from '../../pages/burger-menu';\r\nimport OrdersFeedPage from '../../pages/orders-feed';\r\nimport NotFound404 from '../../pages/not-found-404';\r\nimport ProtectedRoute from './protected-route'\r\nimport Modal from '../modal/modal';\r\nimport IngredientDetails from '../ingredient-details/ingredient-details';\r\nimport { getUser, refreshTokenThunk } from '../../services/actions/user';\r\nimport OrderFullMode from '../orders-feed/order-full-mode';\r\n\r\nimport { TGetUserInfo } from '../utils/types';\r\nimport { getUserInfo } from '../../services/API';\r\nimport { GET_USER_SUCCESS } from '../../services/constants/user';\r\n\r\nconst App: FC = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const location = useLocation<any>();\r\n  const backgroundIngredients = location.state?.backgroundIngredients;\r\n  const backgroundFeed = location.state?.backgroundFeed;\r\n  const backgroundProfile = location.state?.backgroundProfile;\r\n  const prevPath: string | undefined | null = location.state?.prevPath;\r\n  const isAuthenticated = useSelector(store => store.profile.isAuthenticated);\r\n  const getUserError = useSelector(store => store.profile.getUserError)\r\n\r\n  const uploadUserInfo = useCallback(async () => {\r\n    if (!isAuthenticated) {\r\n      dispatch(getUser());\r\n\r\n      // const getUserRequest: TGetUserInfo = await getUserInfo();\r\n\r\n      // if (getUserRequest.success === false) {\r\n      //   dispatch(refreshTokenThunk());\r\n      // } else {\r\n      //   dispatch({\r\n      //     type: GET_USER_SUCCESS,\r\n      //     user: getUserRequest.user\r\n      //   })\r\n      // }\r\n\r\n    }\r\n\r\n    if (getUserError) {\r\n      dispatch(refreshTokenThunk());\r\n    }\r\n\r\n  }, [dispatch, isAuthenticated, getUserError])\r\n\r\n\r\n  function closeModalWindow() {\r\n    if (prevPath && prevPath.length > 0) {\r\n      history.replace(prevPath);\r\n    } else {\r\n      history.replace('/');\r\n    }\r\n\r\n  }\r\n\r\n  useEffect(\r\n    () => {\r\n\r\n      uploadUserInfo();\r\n      dispatch(getIngredients());\r\n\r\n    }, [dispatch, uploadUserInfo]\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <AppHeader />\r\n      {backgroundIngredients && <Route\r\n        path='/ingredients/:id'\r\n        children={<Modal closeModal={closeModalWindow} title={'Детали ингредиента'}><IngredientDetails /></Modal>} />}\r\n      {backgroundFeed && <Route\r\n        path='/feed/:id'\r\n        children={<Modal closeModal={closeModalWindow}><OrderFullMode /></Modal>} />}\r\n      {backgroundProfile && <Route\r\n        path='/profile/orders/:id'\r\n        children={<Modal closeModal={closeModalWindow}><OrderFullMode /></Modal>} />}\r\n\r\n      <Switch location={backgroundIngredients ?? backgroundFeed ?? backgroundProfile ?? location}>\r\n        <Route path=\"/\" exact={true}>\r\n          <BurgerConstructorPage />\r\n        </Route>\r\n        <Route path=\"/login\" exact={true}  >\r\n          <LoginPage />\r\n        </Route>\r\n        <Route path=\"/register\" exact={true} >\r\n          <RegisterPage />\r\n        </Route>\r\n        <Route path=\"/forgot-password\" exact={true}>\r\n          <ForgotPasswordPage />\r\n        </Route>\r\n        <Route path=\"/reset-password\" exact={true} >\r\n          <ResetPasswordPage />\r\n        </Route>\r\n        <ProtectedRoute path=\"/profile\" exact={true} >\r\n          <ProfilePage />\r\n        </ProtectedRoute>\r\n        <Route path='/ingredients/:id' children={<IngredientDetails />} />\r\n        <Route path='/feed' exact={true}>\r\n          <OrdersFeedPage />\r\n        </Route>\r\n        <Route path='/feed/:id'>\r\n          <OrderFullMode />\r\n        </Route>\r\n        <ProtectedRoute path=\"/profile/orders\" exact={true} children={<ProfilePage />} />\r\n        <ProtectedRoute path=\"/profile/orders/:id\" children={<OrderFullMode />} />\r\n        <Route >\r\n          <NotFound404 />\r\n        </Route>\r\n      </Switch>\r\n      {/* modal */}\r\n\r\n\r\n      {/* {showModal && (\r\n        <Modal closeModal={closeModalWindow} title={'Детали ингредиента'} showModal={showModal}>\r\n          <OrderDetails />\r\n        </Modal>\r\n      )} */}\r\n    </>\r\n  )\r\n\r\n}\r\n\r\n\r\nexport default App;\r\n\r\n","import { TItem } from '../components/utils/types';\r\n\r\n// Types for Initial State of the Store\r\nexport type TInitialState = {\r\n    ingredients: TItem[];\r\n    currentIngredients: TItem[];\r\n    ingredient: TItem | {};\r\n    order: number;\r\n    ingredientsRequest: boolean;\r\n    ingredientsSuccess: boolean;\r\n    ingredientsFailed: boolean;\r\n    totalPrice: number;\r\n    bun: TItem | {};\r\n    isBunAdded: boolean;\r\n    sendOrderRequest: boolean;\r\n    sendOrderSuccess: boolean;\r\n    sendOrderFailed: boolean;\r\n    counterIngredients: TItem[];\r\n}\r\n\r\n\r\nconst initialState: TInitialState = {\r\n    ingredients: [],\r\n    currentIngredients: [],\r\n    ingredient: {},\r\n    order: 0,\r\n    ingredientsRequest: false,\r\n    ingredientsSuccess: false,\r\n    ingredientsFailed: false,\r\n    totalPrice: 0,\r\n    bun: {},\r\n    isBunAdded: false,\r\n    sendOrderRequest: false,\r\n    sendOrderSuccess: false,\r\n    sendOrderFailed: false,\r\n    counterIngredients: []\r\n};\r\n\r\n\r\nexport default initialState;","import {\r\n    SAVE_PASSWORD_REQUEST,\r\n    SAVE_PASSWORD_SUCCESS,\r\n    SAVE_PASSWORD_ERROR,\r\n    CREATE_USER_REQUEST,\r\n    CREATE_USER_SUCCESS,\r\n    CREATE_USER_ERROR,\r\n    LOGIN_USER_REQUEST,\r\n    LOGIN_USER_SUCCESS,\r\n    LOGIN_USER_ERROR,\r\n    GET_USER_SUCCESS,\r\n    GET_USER_REQUEST,\r\n    GET_USER_ERROR,\r\n    UPDATE_USER_SUCCESS,\r\n    UPDATE_USER_ERROR,\r\n    REFRESH_TOKEN_REQUEST,\r\n    REFRESH_TOKEN_SUCCESS,\r\n    REFRESH_TOKEN_ERROR,\r\n    LOGOUT_SUCCESS\r\n} from '../constants/user';\r\n\r\nimport { TUserProfileActions } from '../actions/user';\r\nimport { TUser } from '../../components/utils/types';\r\n\r\n\r\ntype TInitialState = {\r\n    savePasswordRequest: boolean;\r\n    savePasswordSuccess: boolean;\r\n    savePasswordFailed: boolean;\r\n    createUserRequest: boolean;\r\n    createUserSuccess: boolean;\r\n    createUserFailed: boolean;\r\n    loginUserRequest: boolean;\r\n    loginUserSuccess: boolean;\r\n    loginUserFailed: boolean;\r\n    user: TUser | {},\r\n    isAuthenticated: boolean;\r\n    errorMessage: string | undefined;\r\n    getUserRequest: boolean;\r\n    getUserSuccess: boolean;\r\n    getUserError: boolean;\r\n    updateUserSuccess: boolean;\r\n    refreshTokenRequest: boolean;\r\n    refreshTokenSuccess: boolean;\r\n    refreshTokenFailed: boolean;\r\n    logoutSuccess: boolean;\r\n};\r\n\r\nconst initialState: TInitialState = {\r\n    savePasswordRequest: false,\r\n    savePasswordSuccess: false,\r\n    savePasswordFailed: false,\r\n    createUserRequest: false,\r\n    createUserSuccess: false,\r\n    createUserFailed: false,\r\n    loginUserRequest: false,\r\n    loginUserSuccess: false,\r\n    loginUserFailed: false,\r\n    user: {},\r\n    isAuthenticated: false,\r\n    errorMessage: '',\r\n    getUserRequest: false,\r\n    getUserSuccess: false,\r\n    getUserError: false,\r\n    updateUserSuccess: false,\r\n    refreshTokenRequest: false,\r\n    refreshTokenSuccess: false,\r\n    refreshTokenFailed: false,\r\n    logoutSuccess: false\r\n};\r\n\r\nexport const profileReducer = (state = initialState, action: TUserProfileActions): TInitialState => {\r\n    switch (action.type) {\r\n        case SAVE_PASSWORD_REQUEST: {\r\n            return {\r\n                ...state,\r\n                savePasswordRequest: true\r\n            }\r\n        }\r\n        case SAVE_PASSWORD_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                savePasswordRequest: false,\r\n                savePasswordSuccess: true\r\n            }\r\n        }\r\n        case SAVE_PASSWORD_ERROR: {\r\n            return {\r\n                ...state,\r\n                savePasswordRequest: false,\r\n                savePasswordFailed: true,\r\n                errorMessage: action.errorMessage\r\n            }\r\n        }\r\n        case CREATE_USER_REQUEST: {\r\n            return {\r\n                ...state,\r\n                createUserRequest: true,\r\n                isAuthenticated: false\r\n            }\r\n        }\r\n        case CREATE_USER_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                createUserRequest: false,\r\n                createUserSuccess: true,\r\n                user: action.user,\r\n                isAuthenticated: true\r\n\r\n            }\r\n        }\r\n        case CREATE_USER_ERROR: {\r\n            return {\r\n                ...state,\r\n                createUserRequest: false,\r\n                createUserFailed: true,\r\n                isAuthenticated: false,\r\n                errorMessage: action.errorMessage\r\n            }\r\n        }\r\n        case LOGIN_USER_REQUEST: {\r\n            return {\r\n                ...state,\r\n                loginUserRequest: true,\r\n                isAuthenticated: false\r\n            }\r\n        }\r\n        case LOGIN_USER_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                loginUserRequest: false,\r\n                loginUserSuccess: true,\r\n                isAuthenticated: true,\r\n                user: action.user\r\n            }\r\n        }\r\n        case LOGIN_USER_ERROR: {\r\n            return {\r\n                ...state,\r\n                loginUserRequest: false,\r\n                loginUserFailed: true,\r\n                isAuthenticated: false,\r\n                errorMessage: action.errorMessage\r\n            }\r\n        }\r\n        case GET_USER_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                getUserSuccess: true,\r\n                user: action.user,\r\n                isAuthenticated: true\r\n            }\r\n        }\r\n        case GET_USER_REQUEST: {\r\n            return {\r\n                ...state,\r\n                getUserRequest: true\r\n            }\r\n        }\r\n        case GET_USER_ERROR: {\r\n            return {\r\n                ...state,\r\n                getUserRequest: false,\r\n                getUserError: true,\r\n                isAuthenticated: false\r\n            }\r\n        }\r\n        case UPDATE_USER_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                updateUserSuccess: true,\r\n                user: { ...action.user }\r\n            }\r\n        }\r\n        case UPDATE_USER_ERROR: {\r\n            return {\r\n                ...state,\r\n                updateUserSuccess: false,\r\n                errorMessage: action.errorMessage\r\n            }\r\n        }\r\n        case REFRESH_TOKEN_REQUEST: {\r\n            return {\r\n                ...state,\r\n                refreshTokenRequest: true\r\n            }\r\n        }\r\n        case REFRESH_TOKEN_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                refreshTokenRequest: false,\r\n                refreshTokenSuccess: true,\r\n                isAuthenticated: true,\r\n                user: { ...action.user }\r\n            }\r\n        }\r\n        case REFRESH_TOKEN_ERROR: {\r\n            return {\r\n                ...state,\r\n                refreshTokenRequest: false,\r\n                refreshTokenFailed: true,\r\n                isAuthenticated: false,\r\n                errorMessage: action.errorMessage\r\n            }\r\n        }\r\n        case LOGOUT_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                logoutSuccess: true,\r\n                isAuthenticated: false,\r\n                user: {}\r\n            }\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n","import {\r\n    WS_CONNECTION_START,\r\n    WS_CONNECTION_CLOSED,\r\n    WS_CONNECTION_ERROR,\r\n    WS_CONNECTION_SUCCESS,\r\n    WS_CONNECTION_GET_MESSAGE,\r\n    WS_CONNECTION_SEND_MESSAGE\r\n} from '../constants/socket';\r\n\r\nimport { TCreatedOrder } from '../../components/utils/types';\r\n\r\nimport { TWSActions } from '../actions/orders';\r\n\r\n\r\ntype TInitialState = {\r\n    total: number;\r\n    totalToday: number;\r\n    orders: TCreatedOrder[];\r\n    wsConnected: boolean;\r\n    error?: Event;\r\n};\r\n\r\nconst initialState: TInitialState = {\r\n    total: 0,\r\n    totalToday: 0,\r\n    orders: [],\r\n    wsConnected: false\r\n};\r\n\r\nexport const ordersReducer = (state = initialState, action: TWSActions): TInitialState => {\r\n    switch (action.type) {\r\n        case WS_CONNECTION_START: {\r\n            return {\r\n                ...state,\r\n                wsConnected: false\r\n            };\r\n        }\r\n        case WS_CONNECTION_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                error: undefined,\r\n                wsConnected: true\r\n            };\r\n        }\r\n        case WS_CONNECTION_ERROR: {\r\n            return {\r\n                ...state,\r\n                error: action.payload,\r\n                wsConnected: false\r\n            };\r\n        }\r\n        case WS_CONNECTION_CLOSED: {\r\n            return {\r\n                ...state,\r\n                error: undefined,\r\n                wsConnected: false\r\n            };\r\n        }\r\n        case WS_CONNECTION_GET_MESSAGE: {\r\n            return {\r\n                ...state,\r\n                error: undefined,\r\n                total: action.payload.total,\r\n                totalToday: action.payload.totalToday,\r\n                orders: action.payload.orders\r\n            };\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};","import { combineReducers } from 'redux';\r\nimport { ingredientsReducer } from './ingredients';\r\nimport { profileReducer } from './profile';\r\nimport { ordersReducer } from './orders';\r\n\r\nexport const rootReducer = combineReducers({\r\n    ingredients: ingredientsReducer,\r\n    profile: profileReducer,\r\n    orders: ordersReducer\r\n});","import {\r\n    GET_BURGER_INGREDIENTS_REQUEST,\r\n    GET_BURGER_INGREDIENTS_SUCCESS,\r\n    GET_BURGER_INGREDIENTS_ERROR,\r\n    SEND_ORDER_ITEMS_REQUEST,\r\n    SEND_ORDER_ITEMS_SUCCESS,\r\n    SEND_ORDER_ITEMS_ERROR,\r\n    ADD_BURGER_INGREDIENT,\r\n    DELETE_BURGER_INGREDIENT,\r\n    ADD_BUN,\r\n    CHANGE_INGREDIENTS_POSITION,\r\n    ADD_ITEM_TO_COUNTER,\r\n    DELETE_ITEM_FROM_COUNTER\r\n} from '../constants/ingredients';\r\n\r\nimport initialState, { TInitialState } from '../store';\r\n\r\nimport { TIngredientsActions } from '../actions/ingredients'\r\n\r\n\r\n\r\nexport const ingredientsReducer = (state = initialState, action: TIngredientsActions): TInitialState => {\r\n    switch (action.type) {\r\n        case GET_BURGER_INGREDIENTS_REQUEST: {\r\n            return { ...state, ingredientsRequest: true }\r\n        }\r\n        case GET_BURGER_INGREDIENTS_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                ingredientsSuccess: true,\r\n                ingredientsRequest: false,\r\n                ingredients: [...action.ingredients],\r\n                counterIngredients: [...action.ingredients]\r\n            }\r\n        }\r\n        case GET_BURGER_INGREDIENTS_ERROR: {\r\n            return { ...state, ingredientsFailed: true, ingredientsRequest: false }\r\n        }\r\n        case ADD_ITEM_TO_COUNTER: {\r\n            return {\r\n                ...state,\r\n                counterIngredients: [...action.copiedCounterArray]\r\n            }\r\n        }\r\n        case DELETE_ITEM_FROM_COUNTER: {\r\n            return {\r\n                ...state,\r\n                counterIngredients: action.copiedCounterArray\r\n            }\r\n        }\r\n        case SEND_ORDER_ITEMS_REQUEST: {\r\n            return { ...state, sendOrderRequest: true }\r\n        }\r\n        case SEND_ORDER_ITEMS_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                sendOrderSuccess: true,\r\n                sendOrderRequest: false,\r\n                order: action.order,\r\n                currentIngredients: [],\r\n                bun: {},\r\n                isBunAdded: false,\r\n                totalPrice: 0,\r\n                counterIngredients: [...state.counterIngredients].map(item => item = { ...item, counter: 0 })\r\n            }\r\n        }\r\n        case SEND_ORDER_ITEMS_ERROR: {\r\n            return { ...state, sendOrderFailed: true, sendOrderRequest: false }\r\n        }\r\n        case ADD_BURGER_INGREDIENT: {\r\n            return {\r\n                ...state,\r\n                currentIngredients: [...state.currentIngredients, action.item],\r\n                totalPrice: state.totalPrice + action.price\r\n            }\r\n        }\r\n        case DELETE_BURGER_INGREDIENT: {\r\n            return {\r\n                ...state,\r\n                currentIngredients: [...state.currentIngredients.slice(0, action.elemIndex),\r\n                ...state.currentIngredients.slice(action.elemIndex + 1)],\r\n                totalPrice: state.totalPrice - action.price\r\n            }\r\n        }\r\n        case ADD_BUN: {\r\n            return {\r\n                ...state,\r\n                bun: { ...action.item },\r\n                isBunAdded: true,\r\n                totalPrice: state.totalPrice + action.price * 2\r\n            }\r\n        }\r\n        case CHANGE_INGREDIENTS_POSITION: {\r\n            return {\r\n                ...state,\r\n                currentIngredients: [...action.newCards]\r\n\r\n            }\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/app/app';\r\nimport { rootReducer } from './services/reducers/index';\r\nimport { Provider } from 'react-redux';\r\nimport { compose, createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { socketMiddleware } from './services/middleware/socket';\r\nimport {\r\n  WS_CONNECTION_CLOSED,\r\n  WS_CONNECTION_ERROR,\r\n  WS_CONNECTION_START,\r\n  WS_CONNECTION_SUCCESS,\r\n  WS_CONNECTION_GET_MESSAGE,\r\n  WS_CONNECTION_SEND_MESSAGE\r\n} from './services/constants/socket';\r\n\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n  }\r\n}\r\n\r\nconst wsActions = {\r\n  WSStart: WS_CONNECTION_START,\r\n  WSSend: WS_CONNECTION_SEND_MESSAGE,\r\n  WSonOpen: WS_CONNECTION_SUCCESS,\r\n  WSonClose: WS_CONNECTION_CLOSED,\r\n  WSonError: WS_CONNECTION_ERROR,\r\n  WSonMessage: WS_CONNECTION_GET_MESSAGE\r\n};\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({} as any) : compose;\r\n\r\nconst enhancer = composeEnhancers(applyMiddleware(thunk, socketMiddleware(wsActions)));\r\n\r\nexport const store = createStore(rootReducer, enhancer);\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n","import type { Middleware, MiddlewareAPI } from 'redux';\r\nimport { AppDispatch, RootState } from '../types/index';\r\nimport { TWSActions } from '../actions/orders';\r\n\r\nexport const socketMiddleware = (wsActions: any): Middleware => {\r\n    return ((store: MiddlewareAPI<AppDispatch, RootState>) => {\r\n        let socket: WebSocket | null = null;\r\n        return next => (action: TWSActions) => {\r\n            const { dispatch, getState } = store;\r\n            const { type, payload } = action;\r\n            const { WSStart, WSSend, WSonOpen, WSonClose, WSonError, WSonMessage } = wsActions;\r\n\r\n            if (type === WSStart) socket = new WebSocket(payload);\r\n\r\n            if (socket) {\r\n                socket.onopen = event => dispatch({ type: WSonOpen, payload: event });\r\n                socket.onerror = event => dispatch({ type: WSonError, payload: event });\r\n                socket.onclose = event => dispatch({ type: WSonClose, payload: event });\r\n                socket.onmessage = event => dispatch({ type: WSonMessage, payload: JSON.parse(event.data) });\r\n            }\r\n            next(action);\r\n        };\r\n    }) as Middleware;\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"app-header_header__1xxYR\",\"wrapper\":\"app-header_wrapper__1s1xa\",\"link\":\"app-header_link__cuxtd\",\"linkText\":\"app-header_linkText__DQC6Z\",\"logo\":\"app-header_logo__1pJ2y\",\"linkActive\":\"app-header_linkActive__3_glw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"burger-ingredients_wrapper__1Jgim\",\"title\":\"burger-ingredients_title__1r4YB\",\"scrollArea\":\"burger-ingredients_scrollArea___Ptm4\",\"subTitle\":\"burger-ingredients_subTitle__1diNR\",\"card\":\"burger-ingredients_card__IjgyP\",\"text\":\"burger-ingredients_text__3vfxs\",\"price\":\"burger-ingredients_price__wyoF9 burger-ingredients_text__3vfxs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"all-texts\":\"order-details_all-texts__vcuN1\",\"title\":\"order-details_title__2dYYc order-details_all-texts__vcuN1\",\"image\":\"order-details_image__yqmoi\",\"text\":\"order-details_text__39Jl4 order-details_all-texts__vcuN1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"burger-constructor_wrapper__2EaEB\",\"scrollArea\":\"burger-constructor_scrollArea__sJp7B\",\"priceCard\":\"burger-constructor_priceCard__Mhyoo\",\"item\":\"burger-constructor_item__2oXto\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal__wrapper\":\"modal_modal__wrapper__2pgnt\",\"modal\":\"modal_modal__1o7Qk\",\"modal__header\":\"modal_modal__header__3ap6f\",\"modal__card\":\"modal_modal__card__2s-XX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"orders-feed_wrapper__2qlzy\",\"wrapper__listMode\":\"orders-feed_wrapper__listMode__3Rl0E\",\"order__date\":\"orders-feed_order__date__3fXON\",\"order__name\":\"orders-feed_order__name__3iBYm\",\"order__list\":\"orders-feed_order__list__LmKda\",\"burgerItem__iconCM\":\"orders-feed_burgerItem__iconCM__dGNda\",\"order__priceNumber\":\"orders-feed_order__priceNumber__1FiiD\",\"order__price\":\"orders-feed_order__price__2C2D6\",\"wrapper__fullMode\":\"orders-feed_wrapper__fullMode__2f6Kz\",\"order__numberFM\":\"orders-feed_order__numberFM__1fbYI\",\"order__nameFM\":\"orders-feed_order__nameFM__284UA\",\"order__statusDone\":\"orders-feed_order__statusDone__3vURd\",\"order__status\":\"orders-feed_order__status__2Ht5V\",\"title\":\"orders-feed_title__1Iuvb\",\"order__listFM\":\"orders-feed_order__listFM__8Dw2X\",\"order__listItemFM\":\"orders-feed_order__listItemFM__1QQjD\",\"burgerItem__priceCard\":\"orders-feed_burgerItem__priceCard__yba2T\",\"order__dateFM\":\"orders-feed_order__dateFM__1Mim3\",\"order__priceFM\":\"orders-feed_order__priceFM__75CZF\",\"order__listItemCM\":\"orders-feed_order__listItemCM__3ULEc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"login_wrapper__4dx3-\",\"title\":\"login_title__IkVCF\",\"form\":\"login_form__1RwmY\",\"text__wrapper\":\"login_text__wrapper__nRFAh\",\"error\":\"login_error__1DfJ_\",\"container\":\"login_container__OaTI7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"app_main__2CHFW\"};"],"sourceRoot":""}